ssh -i "C:\Users\Wilt Chamberlain\.ssh\.ssh (old)\devops.pem" centos@172.17.90.238
ssh -i ~/.ssh/id_rsa centos@172.17.88.112

MJ: ssh centos@172.17.89.247



curl https://scoring.sa.cs.ut.ee/files/devops.pem

hack for exam:
`systemctl stop firewalld`


-name: set timezone
  ansible.builtin.command: timedatectl set-timezone Europe/Tallinn


find /etc -type f -mtime -2
find . -type f -mtime -2


####################
##### Ansible: #####
####################

starting from a brand new machine:

1. `sudo yum install dnf -y`
2. `sudo dnf install ansible -y`
  2a. `ansible --version` to test that it was installed correctly
3. `sudo dnf install git -y`
4. `git clone https://github.com/Stackeduary/Ansible-System-Administration.git`
5. `ansible-galaxy collection install ansible.posix`
6. `ssh-keygen`
7. `cat /home/centos/.ssh/id_rsa.pub >> /home/centos/.ssh/authorized_keys`
8. `ansible-playbook ~/Ansible-System-Administration/playbook.yml -i ~/Ansible-System-Administration/inventory/hosts`




questions for Joe:

- only one host in /ansible/inventory/hosts?



@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@

modules: the different actions that are run by tasks


===============================================================================
===============================================================================
================================== Exam prep ==================================
===============================================================================
===============================================================================




`ansible-galaxy collection install community.general`

`sudo yum autoremove -y`
`sudo yum clean all`
`sudo dnf update`
`sudo firewall-cmd --add-port=53/tcp --permanent`
`sudo firewall-cmd --add-port=53/udp --permanent`
`sudo firewall-cmd --add-port=8301/tcp --permanent`
`sudo firewall-cmd --add-port=8301/udp --permanent`
`sudo firewall-cmd --add-port=80/tcp --permanent`
`sudo firewall-cmd --add-port=80/udp --permanent`
`sudo firewall-cmd --add-port=143/tcp --permanent`
`sudo firewall-cmd --add-port=143/udp --permanent`
`sudo firewall-cmd --add-port=25/tcp --permanent`
`sudo firewall-cmd --add-port=25/udp --permanent`
`sudo firewall-cmd --add-port=2049/tcp --permanent`
`sudo firewall-cmd --add-port=2049/udp --permanent`
`sudo firewall-cmd --add-port=139/tcp --permanent`
`sudo firewall-cmd --add-port=139/udp --permanent`
`sudo firewall-cmd --add-port=5005/tcp --permanent`
`sudo firewall-cmd --add-port=5005/udp --permanent`
`sudo firewall-cmd --add-port=6443/tcp --permanent`
`sudo firewall-cmd --add-port=6443/udp --permanent`
`sudo firewall-cmd --add-port=50080/tcp --permanent`
`sudo firewall-cmd --add-port=50080/udp --permanent`
`sudo firewall-cmd --add-port=443/tcp --permanent`
`sudo firewall-cmd --add-port=443/udp --permanent`
`sudo firewall-cmd --add-port=465/tcp --permanent`
`sudo firewall-cmd --add-port=465/udp --permanent`
`sudo firewall-cmd --add-port=993/tcp --permanent`
`sudo firewall-cmd --add-port=993/udp --permanent`
`sudo firewall-cmd --reload`
`sudo timedatectl set-timezone Europe/Tallinn`
`sudo systemctl start named`
`sudo systemctl enable named`
`sudo vim /etc/named/b98041.sa.cs.ut.ee`
`sudo named-checkzone b98041 /etc/named/b98041.sa.cs.ut.ee`
`sudo named-checkconf`
`sudo chown root:named /etc/named/reverse.b98041.sa.cs.ut.ee`
`sudo chown root:named /etc/named/b98041.sa.cs.ut.ee`
`sudo systemctl restart named`
`sudo firewall-cmd --add-service=dovecot --permanent`
`sudo systemctl restart postfix`
`sudo systemctl restart dovecot`
`sudo systemctl start dovecot`
`sudo systemctl enable dovecot`






============================================================================
============================================================================
================================== LAB 11 ==================================
============================================================================
============================================================================


`sudo mkdir -p /var/lib/rancher/k3s/server/manifests`
`sudo vim /var/lib/rancher/k3s/server/manifests/traefik-config.yml` added:
apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-
    ports:
      web:
        exposedPort: 8080
      websecure:
        exposedPort: 8443
`sudo curl -sfL https://get.k3s.io | sh -`
`sudo firewall-cmd --add-port=6443/tcp --permanent`
`sudo firewall-cmd --add-port=6443/udp --permanent`
`sudo firewall-cmd --reload`
`sudo systemctl enable k3s`
`sudo systemctl start k3s`
`sudo su -`
`sudo vim /home/centos/k8s/simple.yml` added:
	apiVersion: v1
	kind: Pod
	metadata:
	    name: myfirstpod
	spec:
	    containers:
	    - image: nginx
	      name: user
`sudo kubectl create -f /home/centos/k8s/simple.yml`
`sudo kubectl describe pod/myfirstpod`
`sudo curl 10.42.0.9`
`sudo kubectl get ns`
`sudo kubectl create ns test-ns`
`sudo vim /home/centos/k8s/simple2.yml` added
	apiVersion: v1
	kind: Pod
	metadata:
	  name: secondpod
	  namespace: test-ns
	spec:
	    containers:
	    - image: nginx
	      name: user
`sudo kubectl create -f /home/centos/k8s/simple2.yml`
`sudo kubectl get all -n test-ns`
`sudo kubectl describe pod/secondpod -n test-ns`
`sudo curl 10.42.0.10`
`sudo kubectl create ns lab11`
`sudo vim /home/centos/k8s/hw1.yml` added
apiVersion: v1
kind: Pod
metadata:
    name: hw1
    namespace: lab11
spec:
    containers:
    - image: registry.hpc.ut.ee/sysadmincourse-dev/hello-world:1.0
      name: hw1
      ports:
      - containerPort: 5000
`sudo kubectl create -f /home/centos/k8s/hw1.yml`
`sudo vim /home/centos/k8s/hw1a.yml` added


apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw1a
  namespace: lab11
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hw1a
  template:
    metadata:
      labels:
        app: hw1a
    containers:
    - image: registry.hpc.ut.ee/sysadmincourse-dev/hello-world:1.0
      name: hw1a
      ports:
      - containerPort: 5000
      imagePullPolicy: Never


apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw1a
  namespace: lab11
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hw1a
  template:
    metadata:
      labels:
        app: hw1a
    spec:
      containers:
      - image: registry.hpc.ut.ee/sysadmincourse-dev/hello-world:1.0
        name: hw1a
        ports:
        - containerPort: 5000
        imagePullPolicy: Never

`sudo kubectl create -f /home/centos/k8s/hw1a.yml`
`sudo kubectl apply -f /home/centos/k8s/hw1a.yml`
`sudo kubectl get deployment -n lab11`
`sudo kubectl get -n lab11 pods`
`sudo kubectl delete pod/hw1a-6b4f645c6c-fpdvs -n lab11`
`sudo kubectl scale --replicas=3 deployment/hw1a -n lab11`
`sudo kubectl get -n lab11 pods`
`cp hw1a.yml service.yml`
`sudo vim /home/centos/k8s/service.yml` added
apiVersion: v1
kind: Service
metadata:
  name: service
  namespace: lab11
spec:
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: hw1a
`sudo kubectl apply -f /home/centos/k8s/service.yml`
`sudo kubectl get services -n lab11`
`sudo vim /home/centos/k8s/service.yml` added
  type: NodePort
`sudo kubectl apply -f /home/centos/k8s/service.yml`
`sudo kubectl get services -n lab11`
`sudo firewall-cmd --add-port=32639/tcp --permanent`
`sudo firewall-cmd --reload`
b98041.sa.cs.ut.ee:32639 DID NOT WORK
`sudo kubectl scale deployment/hw1a --replicas=3 -n lab11`
`sudo kubectl get services -n lab11`
`sudo curl 10.43.186.216:32639` DID NOT WORK
`sudo vim /home/centos/k8s/ingress.yml` added
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lab11ingress
  namespace: lab11
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  defaultBackend:
    service:
      name: service
      port:
        number: 32639
`sudo kubectl apply -f /home/centos/k8s/ingress.yml`
`sudo firewall-cmd --permanent --zone=trusted --add-source=10.42.0.0/16 # for the pods`
`sudo firewall-cmd --permanent --zone=trusted --add-source=10.43.0.0/16 # for the services`
`sudo firewall-cmd --reload`
`sudo vim /etc/identity` added
Full name: Bill Sendewicz ; email address for HPC to offer me a job: billsendewicz@proton.me
VM name: b98041
Matrix number: b98041
email address: william.j.sendewicz@ut.ee









####################
##### Ansible: #####
####################

- 





@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@

namespace: keep resources distinct

four namespaces within a cluster:
- 1. default
- 2. kube-node-lease: tracks other k3s nodes
- 3. kube-public: created automatically and readable by all users
- 4. kube-system: system-level services; only accessible by K8s admins






=====================================================================
=========================== Lab 11 Theory ===========================
=====================================================================


My questions:

- use cases for K8s?

- ingress in K8s vs. ingress in ETAIS when opening ports

- 4 billion IPs, how does K8s know how to choose a valid IP
private networks, subnets


The Lens part at the end of the lab is optional but highly recommended







============================================================================
============================================================================
================================== LAB 10 ==================================
============================================================================
============================================================================


`sudo vim /etc/yum.repos.d/trivy.repo` added
[trivy]
name=Trivy repository
baseurl=https://aquasecurity.github.io/trivy-repo/rpm/releases/$releasever/$basearch/
gpgcheck=0
enabled=1
`sudo yum update -y`
`sudo yum install trivy -y`
`/usr/local/bin/trivy image alpine`
`rpm -ivh https://github.com/aquasecurity/trivy/releases/download/v0.26.0/trivy_0.26.0_Linux-64bit.rpm`
`/usr/local/bin/trivy image registry.hpc.ut.ee/mirror/library/python:3.4-alpine`
`docker run -d --name whoami registry.hpc.ut.ee/mirror/containous/whoami`



^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^ DID NOT WORK ^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

`docker exec -it whoami bash`
`docker exec -it whoami ash`
`docker exec -it whoami sh`

`docker cp whoami:/bin/bash .`
`docker cp 8de2:/bin/bash .`
`docker cp 8de2:. /bin/bash`


`scratch_container_id=$(docker ps -ql)
docker run -d busybox:latest sleep 100
busybox_container_id=$(docker ps -ql)
docker cp "$busybox_container_id":/bin/busybox .

# The busybox binary will become whatever you name it (or the first arg you pass to it), for more info run:
# docker run busybox:latest /bin/busybox
# The `busybox --install` command copies the binary with different names into a directory.

docker cp ./busybox "$scratch_container_id":/busybox

docker exec -it "$scratch_container_id" /busybox sh -c '
export PATH="/busybin:$PATH"
/busybox mkdir /busybin
/busybox --install /busybin
sh'

STUCK HERE: cannot exec into the container because it doesn't have shell or bash

docker image inspect whoami | jq '.[0].Config.Entrypoint'
docker image inspect whoami | jq '.[0].Config.Cmd'

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^ DID NOT WORK ^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


`sudo mkdir /etc/traefik && cd /etc/traefik`
`sudo vim /etc/traefik/traefik.toml` and added

[global]
  checkNewVersion = true
  sendAnonymousUsage = false

[entryPoints]
  [entryPoints.web]
    address = ":80"

[log]

[api]
  insecure = true
  dashboard = true

[ping]

[providers.docker]

`docker run -d -p 50080:80 -p 58080:8080 -v /var/run/docker.sock:/var/run/docker.sock:ro -v /etc/traefik/traefik.toml:/traefik.toml:ro --restart=always traefik:v2.1.8`
`sudo firewall-cmd --add-port=50080/tcp --permanent`
`sudo firewall-cmd --add-port=50080/udp --permanent`
`sudo firewall-cmd --add-port=58080/tcp --permanent`
`sudo firewall-cmd --add-port=58080/udp --permanent`
`sudo firewall-cmd --reload`
`docker run -d --name whoami-traefik --label traefik.enable=true --label 'traefik.http.routers.router.rule=Host(`b98041.sa.cs.ut.ee`)' --label 'traefik.http.routers.router.entrypoints=web' registry.hpc.ut.ee/mirror/containous/whoami`






####################
##### Ansible: #####
####################

- 





@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@






=====================================================================
=========================== Lab 10 Theory ===========================
=====================================================================

integration step = build step

build requires root privileges; kaniko doesn't

kaniko: way to build containers without root privilege (centos user)
- binary

it's best to use binaries inside containers



never a good practice to make changes inside a container; changes should be made to the Dockerfile instead








===========================================================================
===========================================================================
================================== LAB 9 ==================================
===========================================================================
===========================================================================

`mkdir -p /etc/docker`
`sudo vim /etc/docker/daemon.json`

{
        "bip": "192.168.67.1/24",
        "fixed-cidr": "192.168.67.0/24",
        "storage-driver": "overlay2",
        "storage-opts": [
            "overlay2.override_kernel_check=true"
        ],
        "default-address-pools": [
            {
                "base": "192.168.167.1/24",
                "size": 24
            },
            {
                "base": "192.168.168.1/24",
                "size": 24
            },
            {
                "base": "192.168.169.1/24",
                "size": 24
            },
            {
                "base": "192.168.170.1/24",
                "size": 24
            },
            {
                "base": "192.168.171.1/24",
                "size": 24
            },
            {
                "base": "192.168.172.1/24",
                "size": 24
            },
            {
                "base": "192.168.173.1/24",
                "size": 24
            },
            {
                "base": "192.168.174.1/24",
                "size": 24
            }
        ]
}

`sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine`
`sudo yum install -y yum-utils`
`sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo`
`sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin`
`sudo systemctl enable docker`
`sudo systemctl start docker`
`docker info` just for fun
`docker run centos:latest`
`docker run registry.hpc.ut.ee/mirror/library/centos`
`docker run -d --name whoami registry.hpc.ut.ee/mirror/containous/whoami`
`mkdir docker_lab`
`touch ~/docker_lab/Dockerfile`
`touch ~/docker_lab/server.py`
`vim /docker_lab/server.py`

#!/bin/env python3

from flask import Flask, request, jsonify
import socket
app = Flask(__name__)

@app.route('/')
def hello():
    response = f"Client IP: {request.remote_addr} \nHostname: {socket.gethostname()}\n"
    return response, 200

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=5000)

`vim /docker_lab/Dockerfile`

FROM registry.hpc.ut.ee/mirror/library/alpine

RUN apk add --no-cache python3 py3-pip
RUN pip3 install flask

COPY server.py /opt/server.py

EXPOSE 5000
CMD python3 /opt/server.py

`sudo docker build -t docker_lab ~/docker_lab`
`sudo docker run -d --name docker_lab docker_lab`
`sudo docker inspect docker_lab | grep IPAddress`
`curl 192.168.67.3:5000`
`sudo firewall-cmd --add-port=5005/tcp --permanent`
`sudo firewall-cmd --reload`
`sudo docker run -dp 5005:5000 docker_lab`
`sudo vim /etc/named/b98041.sa.cs.ut.ee` added container-proxy      IN     CNAME   b98041.sa.cs.ut.ee.
UPDATE MOTHERFUCKING SERIAL!!!!!!!!!!!!!!!!!!!
`sudo systemctl restart named`
`sudo vim /etc/httpd/conf.d/www.b98041.conf`

<VirtualHost *:80>
    ServerName container-proxy.b98041.sa.cs.ut.ee
    # ServerName sets the name to listen to for HTTP requests
    ErrorLog /var/log/httpd/container-proxy-error_log
    CustomLog /var/log/httpd/container-proxy-access_log common
    ForensicLog /var/log/httpd/container-proxy-forensic_log

    ProxyPreserveHost On

    ProxyPass / http://192.168.67.3:5000/
    ProxyPassReverse / http://192.168.67.3:5000/
</VirtualHost>

`sudo systemctl restart httpd`
`sudo docker inspect e64f2ecdb7f9 | grep IPAddress`










####################
##### Ansible: #####
####################

- `mkdir /etc/docker`
- `cp daemon.json /etc/docker/daemon.json`
- install Docker
- open ports
- create Flask directory
- copy server.py into Flask directory
- copy VirtualHost file into appropriate place





@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@






====================================================================
=========================== Lab 9 Theory ===========================
====================================================================

VMs have their own OS inside
Docker runs inside the host OS; the container engine sits between containers and the host OS


detached mode required for container to be persistent
persistent container means it is constantly running and responding to queries








===========================================================================
===========================================================================
================================== LAB 8 ==================================
===========================================================================
===========================================================================


2 disks

`lsblk`
`ls -la /dev/ | grep '^b'` filters only the lines that start with 'b'
`sudo fdisk -l`
`sudo fdisk /dev/sdb` n, e, defaults; p, n, p, 1, 4096, 1048574; n, p, 2, 1050624, 2097151

`sudo fdisk /dev/sdb` n, e, defaults; n, p, 4096, 1048574; n, 1050624, 2097151; w

the first sector starts at 2048 because there are four partitions each with their own MBRs at 512 bytes each; no, because there are four partitions already, each 512 bytes large

`lsblk`
`sudo su`
`mkfs.ext4 -L "lab7FSext4" /dev/sdb5`
`mkfs.xfs -L "lab7FSxfs" /dev/sdb6`
`blkid`
`file -sL /dev/sdb5`
`file -sL /dev/sdb6`
`cat /etc/fstab`
`mkdir -p /lab7/fs-ext4 /lab7/fs-xfs`
`vim /etc/fstab` 

400a6245-6a89-4ffd-8b54-71fb1c2c95db lab7FSext4
3f941bd6-995c-47d1-a422-b00c9dff9f25 lab7FSxfs

UUID=400a6245-6a89-4ffd-8b54-71fb1c2c95db /lab7/fs-ext4          ext4      defaults        0 0
UUID=3f941bd6-995c-47d1-a422-b00c9dff9f25 /lab7/fs-xfs          xfs      defaults      0 0

`mount -a`
`systemctl daemon-reload`
`lsblk`

`sudo dnf install nfs-utils`
`systemctl start nfs-server`
`mkdir -p /shares/nfs`
`mkdir -p ~/mnt/nfs`
`vim /etc/exports` 
/shares/nfs      localhost(rw)
`exportfs -a`
`mount -t nfs b98041.sa.cs.ut.ee:/shares/nfs ~/mnt/nfs`
`sudo firewall-cmd --add-port=2049/tcp --permanent`
`sudo firewall-cmd --add-port=111/tcp --permanent`
`sudo firewall-cmd --reload`
`sudo dnf install samba`
`sudo dnf install samba-common`
`sudo dnf install samba-client`
`sudo dnf install cifs-utils`
`sudo mkdir /shares/samba`
`sudo groupadd samba_group`
`sudo usermod -aG samba_group scoring`
`sudo usermod -aG samba_group centos`
`sudo smbpasswd -a scoring` 2daysuperadmin
`sudo chmod -R 0755 /shares/samba`
`sudo chown -R root:samba_group /shares/samba`
`sudo chcon -t samba_share_t /shares/samba`
`sudo vim /etc/samba/smb.conf`
[smb]
        comment = Samba share for SA Lab 8
        valid users = @samba_group
        path = /shares/samba
        browsable = yes
        writable = yes
`sudo systemctl start smb`
`sudo systemctl enable smb`
`sudo firewall-cmd --add-port=445/tcp --permanent`
`sudo firewall-cmd --add-port=139/tcp --permanent`
`sudo firewall-cmd --reload`
`testparm`
`smbclient -L //localhost -U <user>` tried nagios, centos, root; all 'session setup failed: NT_STATUS_LOGON_FAILURE'
`smbclient -L //localhost -U scoring` worked
`mount -t cifs -o username=scoring //localhost/smb/mnt/samba/`
	[root@B98041 nfs]# mount -t cifs -o username=scoring //localhost/smb/mnt/samba/
	mount: //localhost/smb/mnt/samba/: can't find in /etc/fstab.
	[root@B98041 nfs]# pwd
	/root/mnt/nfs
`/usr/local/bin/consul kv put object/b98041 2daysuperadmin`
`cd /usr/bin`
`wget https://dl.min.io/client/mc/release/linux-amd64/mc`
`sudo chmod +x mc`
`mc --help`
`mc config host list`
`mc config host add scoring https://scoring.sa.cs.ut.ee:9000 b98041 2daysuperadmin`
`mc mb scoring/b98041`
`mc ls scoring/b98041`
`vim scoringtestfile` b98041
`mc cp scoringtestfile scoring/b98041/scoringtestfile`


DID NOT RUN:
`docker pull minio/mc`
`docker run minio/mc:edge ls play`









####################
##### Ansible: #####
####################

-- mounting: https://docs.ansible.com/ansible/latest/collections/ansible/posix/mount_module.html

-- https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/managing-local-storage-using-rhel-system-roles_managing-file-systems


@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@

first letter of `ls -la` indicates the type of file:
d = directory
l = link
- = file


modifying sdb is okay; modifying sda is not




====================================================================
=========================== Lab 8 Theory ===========================
====================================================================



FS determines the start and stop of a file/block

need for FS: to convert huge table of bits into a usable structure

metadata: for small files, coupled with the file; for large files, separate from the file itself

remember defragmentation in old Windows OSes? Don't do defragmentation these days because file blocks are written separately in whatever size blocks are available and metadata tracks the location of these blocks

journal is a data structure next to the file
keeps track of: "I should write 1010 to file N"
journaling is very quick compared to writing/seeking, etc.
FS looks at journal to make sure file is in a consistent state
journal syncs constantly, which prevents losing the data in volatile memory if the power source is lost

web server and FS of a DB must be backed up at same time unless there's an inconsistency *****

careful not to call a snapshot a backup because snapshot is in the same FS structure as the original; if corrupted, disk fails, then the file is lost
a backup is in a different FS

NFS: shares FS through a port via a protocol, two machines can communicate and share IO operations

IBM Spectrum Scale/general parallel FS

imagine 5000 distributed machines; multiple machines that can share storage, and the FS should be smart enough to know that when one of the machines dies, the files still persist on the other machines
n+1 separate storage nodes

share-nothing FS: hard disks are inside the client machines themselves; this is basically what Hadoop is: a merger between NFS and DFS:
NameNode holds metadata but the data are held on client machines; instead of writing file to one machine, it replicates it on several client machines, preferably on different racks

erasure coding: more complicated version of share-nothing FSes


EXT4 used for desktops but Ubuntu and Debian also use for servers; works better than NFS; sacrifices performance for usability

XFS: read/write quickly, extremely strong integrity
Centos is a downstream of Red Hat; sacrifices usability, e.g., can't reduce size of FS

goal of XFS is to get files back if FS fails

BTRFS has snapshot capability out of the box; EXT4 and XFS don't; can put multiple HDs together by default

object storage: only four CRUD operations, handles ;permissions very well





===========================================================================
===========================================================================
================================== LAB 7 ==================================
===========================================================================
===========================================================================


`touch /etc/pki/tls/certs/www_server.crt` followed by `vi ...` and inserted the certificate
`touch /etc/pki/tls/private/www_server.key` followed by `vi ...` and inserted private key
`touch /etc/pki/tls/certs/cacert.crt` followed by `vi ...` and inserted CA chain
`sudo dnf install mod_ssl`

3 virtual hosts:
- 1. www = apache
- 2. proxy flask
- 3. wordpress

@@@@@ I also modified mail.b98041.sa.cs.ut.ee for TLS. Is that a problem? @@@@@
`cd /etc/httpd/conf.d`
`sudo vi /etc/httpd/conf.d/mail.b98041.sa.cs.ut.ee.conf` duplicated the port 80 listening virtual host for 443
`sudo vi /etc/httpd/conf.d/www.b98041.conf` duplicated the port 80 listening virtual host for 443
`sudo vi /etc/httpd/conf.d/proxy.conf` duplicated the port 80 listening virtual host for 443
`sudo vi /etc/httpd/conf.d/wordpress.b98041.conf` duplicated the port 80 listening virtual host for 443
`sudo vi /etc/httpd/conf.d/ssl.conf` line 85
`sudo apachectl graceful`
`sudo systemctl status httpd.service`
`sudo firewall-cmd --add-port=443/udp --permanent`
`sudo firewall-cmd --add-port=443/tcp --permanent`
`sudo firewall-cmd --add-service=http --permanent`
`sudo firewall-cmd --reload`
`sudo systemctl start httpd`
`sudo vi /etc/postfix/main.cf` added "smtpd_tls_loglevel = 1" and "smtp_tls_loglevel = 1"
`sudo firewall-cmd --add-port=993/udp --permanent`
`sudo firewall-cmd --add-port=993/tcp --permanent`
`sudo firewall-cmd --add-port=465/udp --permanent`
`sudo firewall-cmd --add-port=465/tcp --permanent`
`sudo firewall-cmd --reload`
`sudo systemctl restart httpd`
`sudo vi /etc/pki/tls/certs/postfix.pem` and inserted the certificate
`sudo vi /etc/pki/tls/private/postfix.key` and inserted private key
`sudo vi /etc/postfix/master.cf`
`sudo dnf install cyrus-sasl-plain`
`sudo systemctl restart postfix`
`sudo systemctl status postfix.service`
`openssl s_client -connect mail.b98041.sa.cs.ut.ee:587 -starttls smtp -CAfile /etc/pki/tls/certs/cacert.crt | grep return`
`openssl s_client -connect mail.b98041.sa.cs.ut.ee:465 -CAfile /etc/pki/tls/certs/cacert.crt | grep return`
`sudo vi /etc/dovecot/conf.d/10-ssl.conf`
`sudo vi /etc/pki/dovecot/certs/dovecot.pem` and inserted the certificate
`sudo vi /etc/pki/dovecot/private/dovecot.pem` and inserted the key
`sudo systemctl restart dovecot`
`openssl s_client -connect mail.b98041.sa.cs.ut.ee:993 -CAfile /etc/pki/tls/certs/cacert.crt | grep return`

ip.dst == 172.17.90.238 and (http or tls)




generating two additional certificates:
wordpress.b98041.sa.cs.ut.ee
mail.b98041.sa.cs.ut.ee (Postfix)


vi trick to erase all file contents:
shift + v
shift + g

tldp.org
bash trick to erase all file contents:
`:> <filename>`


`ctrl + r` to search through command history
##### be careful of file formatting; that was my issue in the snafus in the last two labs


default configuration = `--permanent`
running configuration


Added to `master.cf` in submission block
-o milter_macro_daemon_name=ORIGINATING
-o smtpd_client_restrictions=$mua_client_restrictions
-o smtpd_helo_restrictions=$mua_helo_restrictions
-o smtpd_recipient_restrictions=
-o smtpd_reject_unlisted_recipient=no
-o smtpd_relay_restrictions=permit_sasl_authenticated,reject
-o smtpd_sasl_auth_enable=yes
-o smtpd_sasl_path=private/auth
-o smtpd_sasl_security_options=noanonymous
-o smtpd_sender_restrictions=$mua_sender_restrictions
-o smtpd_tls_auth_only=yes
-o smtpd_tls_security_level=encrypt
-o syslog_name=postfix/submission


Added to `master.cf` in submission block
smtps     inet  n       -       n       -       -       smtpd
  -o syslog_name=postfix/smtps
  -o smtpd_tls_wrappermode=yes
  -o smtpd_sasl_auth_enable=yes
  -o smtpd_sasl_security_options=noanonymous
  -o smtpd_client_restrictions=permit_sasl_authenticated,reject
  -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
  -o milter_macro_daemon_name=ORIGINATING



https://www.geeksforgeeks.org/signals-c-language/
ctrl + c = 15 = terminate
ctrl + z = 19 = stop
9 = kill
there's a difference between the two
how the kernel processes and causes signals
CPU has an interrupt register
something related to IO can interrupt the CPU: an IRQ, interrupt request
for kernel, process table; #1 is kernel itself
R = running
S = running in interactive mode
D = uninterruptable sleep
Z
Halt
signal SIG 1-32
trap: fnc that takes a signal 
equivalent/related to systemctl stop and start





======================
===== WWW apache =====
======================
{
  "certificate": "-----BEGIN CERTIFICATE-----\nMIIDazCCAlOgAwIBAgIUcTltzcxvwEfcO4eKJ8LzHTXfTlgwDQYJKoZIhvcNAQEL\nBQAwJjEkMCIGA1UEAxMbc2EuY3MudXQuZWUgaW50ZXJtZWRpYXRlIENBMB4XDTIy\nMDQyMjE0NTI1N1oXDTIzMDQxODE2NTMyN1owITEfMB0GA1UEAxMWd3d3LmI5ODA0\nMS5zYS5jcy51dC5lZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALwP\nNlQJfxMxG8423zY9nWMUEDIwiaV+VReHegQYAWghadmL/0FLU5TqDfx+jizkIFJw\nfRcFtWUaj047nnOMb+miDvSsAoTEFoiEKu64u3lJJvn8gfU3+vXUZUo0/hfSfZ2h\nRFrTy/h6Iy/NupViOPH2OY3NMIwHY8bI8ceFMmgbd9bc64nTpJ32BGagAoeMw5jH\nPHu4bQfSZWTcOPx3pZ588XgCBzsmr0B8LDQB1oIG05gbtJOU9Thbz3f52oRShEsf\nvdlfpRpTzJlwX2RSr7kZ6Wj7yrN7Y2dOVAzeb36EilaBxjp8lFhO+hfqpf7ILqLx\nHyNeQGdK+FXnv6PWFFsCAwEAAaOBlTCBkjAOBgNVHQ8BAf8EBAMCA6gwHQYDVR0l\nBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBQ81VAvqCP6ibTNfuky\nS3Krt7rgfjAfBgNVHSMEGDAWgBSKahQNvGIc2nzfhDFXaQEjkm3yiDAhBgNVHREE\nGjAYghZ3d3cuYjk4MDQxLnNhLmNzLnV0LmVlMA0GCSqGSIb3DQEBCwUAA4IBAQDR\nqOy/XXyIJTtcqQg89oCczCGjqXUbTN+ce1ASZLAiOu1rBcIlp5nut/KwniXJjMDq\nm5Z5pzdwDoU3HaDtUn4wTWChHbzfB1a7BTDoeIBsTOuPTSxUv2FrOXX6DIYbG/B7\nd9Md8sOVg67rSmmOH76TA4oH/M7tIydJB0lJ5TPet6dmKZP8avxqkNc+qS1caQVi\nEiX3mGzkV8fEJEoFC+GSCeTXyOkP0mBuTthM4HpOdS4bxFWIFrebiM/+iHCtlt4S\nEbfq71V8uJWj/lmyostF4Omx29uXvCH2fGzSvtkfY3CEcinrZU9DzVmeMF848u10\nmVEQxvZyiIEXYuxWfyQk\n-----END CERTIFICATE-----",
  "issuingCa": "-----BEGIN CERTIFICATE-----\nMIIDnzCCAoegAwIBAgIUWopfy2liMFyg1oyS5gDYAN/KMJcwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI4MDgxMzA5WhcNMjcw\nMzI3MDgxMzM5WjAmMSQwIgYDVQQDExtzYS5jcy51dC5lZSBpbnRlcm1lZGlhdGUg\nQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDov6qotBTWWAYVASYs\nC/Izc5thmDyLV0p0uBO9hSoN2Ug5YaYdRtHdIS5EiIAgQqj/eqZGOzVcETGO1VrQ\nT1LOsDjRL//15YCr97Hffdnd0WvDomE4hRWIZ9N86XPI3qocuC5Z6EQtFMcAYHAU\ntN02wAIdUDkVwgzHQba8APc/NhJHiAGAbKF81ufpa4MCEFUh7o9Sz1hNWRCsPXV5\n9l+saJcBtHmsnGv2xhD+IgMp5jQgDE3wY/Lh6+zb8ML3gaoshZfa+kh1KdXjCde9\n5LtaCXhHJwl1562fstZcrD7UAPpgEL9sq+Be2It9oSnJgA5/Y/5Rrm8HnhhJzJew\ny/nNAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFIpqFA28YhzafN+EMVdpASOSbfKIMB8GA1UdIwQYMBaAFJncABlE\n4LT55rHyBaBqOhK1SKhwMDsGCCsGAQUFBwEBBC8wLTArBggrBgEFBQcwAoYfaHR0\ncDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jYTAxBgNVHR8EKjAoMCagJKAihiBo\ndHRwOi8vMTI3LjAuMC4xOjgyMDAvdjEvcGtpL2NybDANBgkqhkiG9w0BAQsFAAOC\nAQEAAfn5WFpX/OL/LiAbBXT90j59nyr0H1l1blfuBaJj6LQVQeaabBchqNM6po9G\n+zdQGJQUlSxDkdZk69XW+jCJE8N1KuSvSPMxlb/K/c2STwjAvizya3n/pFwmRymP\n1FbR8NKVlw57jeyfmEMicA7Alp57Njd0NSUMZPJYqRf8ekGRC/8rAhzBinB+W9b4\n1J4EV9TvAReK5x7PncPUdUQgaifowuVx4vVrCa4kSNHZLL0RZnIFp4hp1cCO3GMc\n95Ujn9/tndf3s2mfYuaMLBHnBrPjhsBMzSTWEUBvLnrv5j9DnaEOareOPoCdOh2C\nVE1WKfgjCRQ1MPvkMaNbft5dgg==\n-----END CERTIFICATE-----",
  "caChain": "-----BEGIN CERTIFICATE-----\nMIIDnzCCAoegAwIBAgIUWopfy2liMFyg1oyS5gDYAN/KMJcwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI4MDgxMzA5WhcNMjcw\nMzI3MDgxMzM5WjAmMSQwIgYDVQQDExtzYS5jcy51dC5lZSBpbnRlcm1lZGlhdGUg\nQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDov6qotBTWWAYVASYs\nC/Izc5thmDyLV0p0uBO9hSoN2Ug5YaYdRtHdIS5EiIAgQqj/eqZGOzVcETGO1VrQ\nT1LOsDjRL//15YCr97Hffdnd0WvDomE4hRWIZ9N86XPI3qocuC5Z6EQtFMcAYHAU\ntN02wAIdUDkVwgzHQba8APc/NhJHiAGAbKF81ufpa4MCEFUh7o9Sz1hNWRCsPXV5\n9l+saJcBtHmsnGv2xhD+IgMp5jQgDE3wY/Lh6+zb8ML3gaoshZfa+kh1KdXjCde9\n5LtaCXhHJwl1562fstZcrD7UAPpgEL9sq+Be2It9oSnJgA5/Y/5Rrm8HnhhJzJew\ny/nNAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFIpqFA28YhzafN+EMVdpASOSbfKIMB8GA1UdIwQYMBaAFJncABlE\n4LT55rHyBaBqOhK1SKhwMDsGCCsGAQUFBwEBBC8wLTArBggrBgEFBQcwAoYfaHR0\ncDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jYTAxBgNVHR8EKjAoMCagJKAihiBo\ndHRwOi8vMTI3LjAuMC4xOjgyMDAvdjEvcGtpL2NybDANBgkqhkiG9w0BAQsFAAOC\nAQEAAfn5WFpX/OL/LiAbBXT90j59nyr0H1l1blfuBaJj6LQVQeaabBchqNM6po9G\n+zdQGJQUlSxDkdZk69XW+jCJE8N1KuSvSPMxlb/K/c2STwjAvizya3n/pFwmRymP\n1FbR8NKVlw57jeyfmEMicA7Alp57Njd0NSUMZPJYqRf8ekGRC/8rAhzBinB+W9b4\n1J4EV9TvAReK5x7PncPUdUQgaifowuVx4vVrCa4kSNHZLL0RZnIFp4hp1cCO3GMc\n95Ujn9/tndf3s2mfYuaMLBHnBrPjhsBMzSTWEUBvLnrv5j9DnaEOareOPoCdOh2C\nVE1WKfgjCRQ1MPvkMaNbft5dgg==\n-----END CERTIFICATE-----,-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIUaTO+DhCikHRfHnpmNQ5zJgdhgwowDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI0MTY0NTM3WhcNMzIw\nMzIxMTY0NjA2WjAWMRQwEgYDVQQDEwtzYS5jcy51dC5lZTCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBANKp0/vJJIVPYC3UvqQd5yx8HUJT0G+v49hesbNz\nyGSmNAwR8rloJ9nXv6XB+MsDm9nb1nISYvEsQSayOGnF1Sa3+ck/oriYsNlQ9Ro5\nFryRM12LOfDtepjEdC4GsMRgr559tW6ABNe+nzRvEaXoKY3HAtVHhd0ssfcNrIUP\nxouBeMs8CmULfsebuvRupyAtVDoNTzl7p/HDD1lwgGkpQgkvmK9mYaUPUOcuAIp/\noqXXcmHYwM2P8dNxrmdyJOKyQpwHnUak+vlbOmiSU23RPLuC6mfTcRlUFnqvjMGX\ndx7J5Eycp9kd3asXwVNeKstNsifSnmPim9aUY3nYHmcwktECAwEAAaN7MHkwDgYD\nVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJncABlE4LT5\n5rHyBaBqOhK1SKhwMB8GA1UdIwQYMBaAFJncABlE4LT55rHyBaBqOhK1SKhwMBYG\nA1UdEQQPMA2CC3NhLmNzLnV0LmVlMA0GCSqGSIb3DQEBCwUAA4IBAQBrvicrsi7V\niakfvC+JYP97roA8QQvY4PzDsYzUvL1hhnKNdzPnZcVVDRQjJ6VUQJxori2BxxaD\nPxtuuuIJ1fSzbq1W5yxlF8JsFzdsuxLlTbsS8E7r59TuCRzE5sUpa+lBtOz1mWcl\nq0QGUVYDHQQV1Gn9PWMkRO8F/A2KuTa6PKO3cjpxRx0scQr6iLjNWvqoEzLEh6+t\n/1eVNeqH1aMdU7L5k80wqVoeFKq4kVCnXYvGu3R0es+9JTsQB8fI66DQCgKUx3zv\nuLrZ/6L52/vq/tzDZaqhQz3l2EardVoY9FdMBD/9wVfeYm5dF98WLAwIFElpoj+K\n4Ufwp3+lZQWe\n-----END CERTIFICATE-----",
  "privateKey": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAvA82VAl/EzEbzjbfNj2dYxQQMjCJpX5VF4d6BBgBaCFp2Yv/\nQUtTlOoN/H6OLOQgUnB9FwW1ZRqPTjuec4xv6aIO9KwChMQWiIQq7ri7eUkm+fyB\n9Tf69dRlSjT+F9J9naFEWtPL+HojL826lWI48fY5jc0wjAdjxsjxx4UyaBt31tzr\nidOknfYEZqACh4zDmMc8e7htB9JlZNw4/HelnnzxeAIHOyavQHwsNAHWggbTmBu0\nk5T1OFvPd/nahFKESx+92V+lGlPMmXBfZFKvuRnpaPvKs3tjZ05UDN5vfoSKVoHG\nOnyUWE76F+ql/sguovEfI15AZ0r4Vee/o9YUWwIDAQABAoIBAAl8kvcGS5zCO27Z\nocTwssHOv0po3Gi2yMAZG3SdaWTBWr+YqlW24Q6ACBiWocFt+JtwBT9mEFJ7VoNR\nypp1mSel/y8khjQAWEqmsCu+seZaZFbz//JI0qYYAswNhEvbWG7dNb+HM6DjOGcu\n75ydidXa3+hhU3Oc49GhTWENPQ+3TNtUHQUsAzwTxE+RGChcbdMBzqM/hBimInJ7\nqPb3nnr1Oae0uyybWHClio9ml1164ZNBMlukze2My8uhAfwuEIQXkSckZ70XPhLi\nPs2Eg32/dZY14hTgkGUCRZFe8As6IpYoAqJhACiKAdXgJCBNNxCpyMCliZrbYWIO\nRm83P5ECgYEA47Jp3TTdEp/O5swbU4IdwSNDvIPdKvIxx3V2Wev43t3WRYkH8WUE\nLk1Re0DfnC99QvSdiLel+UcKKt816c8oH3tbrh8n6G2OQyieV0U7tOg2lp61L5gt\nqp90r2uYK6nfbD8V/trA2b9O+xX3mgE0gTEpJU56l2/tT/qLjO7FXj0CgYEA0298\ned3xbZdlf4hxz5YJZox2hK/8JC6LKPXk6E7c00CYr5QJ0Fnji6LyEfrxYm2e2vc3\nvEmldD/IK0z4x+KJ5Qgh0PM+e6slnvU1oyojcjNPyKv2XFNRB8wiistcJZ5Fk8Uj\njFafz4pt7L32m9SWW/4HDZ8ggSJX6KvrQosevncCgYEAyFYr6uMeN8q/wjWHPXxY\nLZyXdoAW0jhyL+pbjVafi4dnhZrBkFSuzwZcULONiuAFuCl9idL7h05H1dy6lNMd\nnEVvLs5e0JPD/bb5ShOyKsO9c9yD0jJ0y5Csm8NxCcnWuGjxM2DJGUzHcweq6Kdy\nyNC2QQrBtghWpm3s5r0WjokCgYB5JNGfSclAz5P6JIWBOSgdt7FYiTTgzkIxr+H+\nMOFZsRNK1nlhBX/Yy/4Cy1Nu3/w63ZbzrQa9uqXIGYwZivUTYzts61ILrZ4am8il\nukkg78Fw6wZ3E83Dt/S6rZYYf7zB1BxwFlnuohQlpxobYwzbnIsSBPCszK6tw4NC\nV0/ANQKBgH6geRI9auhOYmBuAiJPmSnSVLeGEEHynzt1TWocK2ahEP9TQP8qKimE\n77fenRhh1rm+tFkSquFJG43upTJN15/vH56JBhMVvl5OzcSW0Tdu90nyPv4K4rFd\nPpvuHFecrZ/mceH5iarFR5KQ+D55Jfo7nEFqmZta8k3xNDK8g6LU\n-----END RSA PRIVATE KEY-----",
  "privateKeyType": "rsa",
  "serialNumber": "71:39:6d:cd:cc:6f:c0:47:dc:3b:87:8a:27:c2:f3:1d:35:df:4e:58"
}



=====================
===== wordpress =====
=====================
{
  "certificate": "-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIUHBSnpnzkmh+TqZzoKEzT8J69EeYwDQYJKoZIhvcNAQEL\nBQAwJjEkMCIGA1UEAxMbc2EuY3MudXQuZWUgaW50ZXJtZWRpYXRlIENBMB4XDTIy\nMDQyNzExNDA1NFoXDTIzMDQyMzEzNDEyM1owJzElMCMGA1UEAxMcd29yZHByZXNz\nLmI5ODA0MS5zYS5jcy51dC5lZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAMnRD8WEqcylJ0aix6veyxOqYHUovQkPoIeqnUg2DS+jX18voRxHEzNkZcGt\n5AR2NQL4Oa/3gQK1iLrsOrGqBBoDOR/tymEIey6hFybEahJLMNBa/xMATtFxKS13\nTJ8niLhVIaUdX/gdDkLe5IrFXx3Z+d8Wzxg5nSD3MNrS4x+Ly0B5skj+t98RjugO\nCftJRRq/HUzd4yugJlLQ8BOWR3w8Yf+AEAxAH3Havv3C5dJZ7gpGE4EAXQv1GYZx\nlPl9sCu61HARJYT/Pxk7kCjZFdVPScnKTPSPit9atTNW6kH1w+I+strWHmSxpf6H\nJ74uFSC2zbaqeKYRpNZjjeZsTFECAwEAAaOBmzCBmDAOBgNVHQ8BAf8EBAMCA6gw\nHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBQxuhAoc61Z\ni4FCGnOum/n4nHqUATAfBgNVHSMEGDAWgBSKahQNvGIc2nzfhDFXaQEjkm3yiDAn\nBgNVHREEIDAeghx3b3JkcHJlc3MuYjk4MDQxLnNhLmNzLnV0LmVlMA0GCSqGSIb3\nDQEBCwUAA4IBAQBy4XP0M9y7HpiF82sr52ydAP3PB/kr+5a/cOEDBZcovN4dqZBR\nMHKP68F4obrLrs0k+QFZj3fg94kktj4OZH5x4n3IewbLYKVVNXNViWOX0YRZ1qSi\nFYAvn4FLLCjqrsMoc25IPC1iQMYluQnFHjLY0H54mMipaoWRDaPXDao+Hhw2rESK\nhJ4yX8vVanDK4Jj/plJHVN0wHrN7RBSoZpON1gfn9HcXiFG7R5TbO1TA3VrZ3F2d\n5BIbI4ATqG/WygY/LFdOYhxb3Fq6ovYpbgtIrvJ59T+jT9VCiq2j1p26WgZeiU6n\naU8y0ttivVIGR3gwPD9egPJ146eSLXMr9CoW\n-----END CERTIFICATE-----",
  "issuingCa": "-----BEGIN CERTIFICATE-----\nMIIDnzCCAoegAwIBAgIUWopfy2liMFyg1oyS5gDYAN/KMJcwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI4MDgxMzA5WhcNMjcw\nMzI3MDgxMzM5WjAmMSQwIgYDVQQDExtzYS5jcy51dC5lZSBpbnRlcm1lZGlhdGUg\nQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDov6qotBTWWAYVASYs\nC/Izc5thmDyLV0p0uBO9hSoN2Ug5YaYdRtHdIS5EiIAgQqj/eqZGOzVcETGO1VrQ\nT1LOsDjRL//15YCr97Hffdnd0WvDomE4hRWIZ9N86XPI3qocuC5Z6EQtFMcAYHAU\ntN02wAIdUDkVwgzHQba8APc/NhJHiAGAbKF81ufpa4MCEFUh7o9Sz1hNWRCsPXV5\n9l+saJcBtHmsnGv2xhD+IgMp5jQgDE3wY/Lh6+zb8ML3gaoshZfa+kh1KdXjCde9\n5LtaCXhHJwl1562fstZcrD7UAPpgEL9sq+Be2It9oSnJgA5/Y/5Rrm8HnhhJzJew\ny/nNAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFIpqFA28YhzafN+EMVdpASOSbfKIMB8GA1UdIwQYMBaAFJncABlE\n4LT55rHyBaBqOhK1SKhwMDsGCCsGAQUFBwEBBC8wLTArBggrBgEFBQcwAoYfaHR0\ncDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jYTAxBgNVHR8EKjAoMCagJKAihiBo\ndHRwOi8vMTI3LjAuMC4xOjgyMDAvdjEvcGtpL2NybDANBgkqhkiG9w0BAQsFAAOC\nAQEAAfn5WFpX/OL/LiAbBXT90j59nyr0H1l1blfuBaJj6LQVQeaabBchqNM6po9G\n+zdQGJQUlSxDkdZk69XW+jCJE8N1KuSvSPMxlb/K/c2STwjAvizya3n/pFwmRymP\n1FbR8NKVlw57jeyfmEMicA7Alp57Njd0NSUMZPJYqRf8ekGRC/8rAhzBinB+W9b4\n1J4EV9TvAReK5x7PncPUdUQgaifowuVx4vVrCa4kSNHZLL0RZnIFp4hp1cCO3GMc\n95Ujn9/tndf3s2mfYuaMLBHnBrPjhsBMzSTWEUBvLnrv5j9DnaEOareOPoCdOh2C\nVE1WKfgjCRQ1MPvkMaNbft5dgg==\n-----END CERTIFICATE-----",
  "caChain": "-----BEGIN CERTIFICATE-----\nMIIDnzCCAoegAwIBAgIUWopfy2liMFyg1oyS5gDYAN/KMJcwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI4MDgxMzA5WhcNMjcw\nMzI3MDgxMzM5WjAmMSQwIgYDVQQDExtzYS5jcy51dC5lZSBpbnRlcm1lZGlhdGUg\nQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDov6qotBTWWAYVASYs\nC/Izc5thmDyLV0p0uBO9hSoN2Ug5YaYdRtHdIS5EiIAgQqj/eqZGOzVcETGO1VrQ\nT1LOsDjRL//15YCr97Hffdnd0WvDomE4hRWIZ9N86XPI3qocuC5Z6EQtFMcAYHAU\ntN02wAIdUDkVwgzHQba8APc/NhJHiAGAbKF81ufpa4MCEFUh7o9Sz1hNWRCsPXV5\n9l+saJcBtHmsnGv2xhD+IgMp5jQgDE3wY/Lh6+zb8ML3gaoshZfa+kh1KdXjCde9\n5LtaCXhHJwl1562fstZcrD7UAPpgEL9sq+Be2It9oSnJgA5/Y/5Rrm8HnhhJzJew\ny/nNAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFIpqFA28YhzafN+EMVdpASOSbfKIMB8GA1UdIwQYMBaAFJncABlE\n4LT55rHyBaBqOhK1SKhwMDsGCCsGAQUFBwEBBC8wLTArBggrBgEFBQcwAoYfaHR0\ncDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jYTAxBgNVHR8EKjAoMCagJKAihiBo\ndHRwOi8vMTI3LjAuMC4xOjgyMDAvdjEvcGtpL2NybDANBgkqhkiG9w0BAQsFAAOC\nAQEAAfn5WFpX/OL/LiAbBXT90j59nyr0H1l1blfuBaJj6LQVQeaabBchqNM6po9G\n+zdQGJQUlSxDkdZk69XW+jCJE8N1KuSvSPMxlb/K/c2STwjAvizya3n/pFwmRymP\n1FbR8NKVlw57jeyfmEMicA7Alp57Njd0NSUMZPJYqRf8ekGRC/8rAhzBinB+W9b4\n1J4EV9TvAReK5x7PncPUdUQgaifowuVx4vVrCa4kSNHZLL0RZnIFp4hp1cCO3GMc\n95Ujn9/tndf3s2mfYuaMLBHnBrPjhsBMzSTWEUBvLnrv5j9DnaEOareOPoCdOh2C\nVE1WKfgjCRQ1MPvkMaNbft5dgg==\n-----END CERTIFICATE-----,-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIUaTO+DhCikHRfHnpmNQ5zJgdhgwowDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI0MTY0NTM3WhcNMzIw\nMzIxMTY0NjA2WjAWMRQwEgYDVQQDEwtzYS5jcy51dC5lZTCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBANKp0/vJJIVPYC3UvqQd5yx8HUJT0G+v49hesbNz\nyGSmNAwR8rloJ9nXv6XB+MsDm9nb1nISYvEsQSayOGnF1Sa3+ck/oriYsNlQ9Ro5\nFryRM12LOfDtepjEdC4GsMRgr559tW6ABNe+nzRvEaXoKY3HAtVHhd0ssfcNrIUP\nxouBeMs8CmULfsebuvRupyAtVDoNTzl7p/HDD1lwgGkpQgkvmK9mYaUPUOcuAIp/\noqXXcmHYwM2P8dNxrmdyJOKyQpwHnUak+vlbOmiSU23RPLuC6mfTcRlUFnqvjMGX\ndx7J5Eycp9kd3asXwVNeKstNsifSnmPim9aUY3nYHmcwktECAwEAAaN7MHkwDgYD\nVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJncABlE4LT5\n5rHyBaBqOhK1SKhwMB8GA1UdIwQYMBaAFJncABlE4LT55rHyBaBqOhK1SKhwMBYG\nA1UdEQQPMA2CC3NhLmNzLnV0LmVlMA0GCSqGSIb3DQEBCwUAA4IBAQBrvicrsi7V\niakfvC+JYP97roA8QQvY4PzDsYzUvL1hhnKNdzPnZcVVDRQjJ6VUQJxori2BxxaD\nPxtuuuIJ1fSzbq1W5yxlF8JsFzdsuxLlTbsS8E7r59TuCRzE5sUpa+lBtOz1mWcl\nq0QGUVYDHQQV1Gn9PWMkRO8F/A2KuTa6PKO3cjpxRx0scQr6iLjNWvqoEzLEh6+t\n/1eVNeqH1aMdU7L5k80wqVoeFKq4kVCnXYvGu3R0es+9JTsQB8fI66DQCgKUx3zv\nuLrZ/6L52/vq/tzDZaqhQz3l2EardVoY9FdMBD/9wVfeYm5dF98WLAwIFElpoj+K\n4Ufwp3+lZQWe\n-----END CERTIFICATE-----",
  "privateKey": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAydEPxYSpzKUnRqLHq97LE6pgdSi9CQ+gh6qdSDYNL6NfXy+h\nHEcTM2Rlwa3kBHY1Avg5r/eBArWIuuw6saoEGgM5H+3KYQh7LqEXJsRqEksw0Fr/\nEwBO0XEpLXdMnyeIuFUhpR1f+B0OQt7kisVfHdn53xbPGDmdIPcw2tLjH4vLQHmy\nSP633xGO6A4J+0lFGr8dTN3jK6AmUtDwE5ZHfDxh/4AQDEAfcdq+/cLl0lnuCkYT\ngQBdC/UZhnGU+X2wK7rUcBElhP8/GTuQKNkV1U9JycpM9I+K31q1M1bqQfXD4j6y\n2tYeZLGl/ocnvi4VILbNtqp4phGk1mON5mxMUQIDAQABAoIBAAfIHuKP1fhFGfmY\nRziyU4RDmoqJ8pgJ2TfB9WSWaPXAR+okrQKpHu1pXp8UNGmToUGnDpphYcEX/Niw\nSScWlifmnepEQfxx1kYbAgiFpE1mRtCR4an65g8fXOYa5oJwhM4OwkhalJu9ixI7\nA/bx21QMVp0qhPu7JPrjbSfS390Udkqc1vn3gwlyDRqXFmMkXuPcJBJkW8MxXF55\n4S0bxBI29icWL2rfY4OfDWdxuUSyrEQyCypRbdDwq0BXecKjd03OsDvnVlayllTU\nSbn4l62seAUy6Jh1Y17POp+/wgQF0M59m02MUwkeFq4FMqXTt9Ema0yCl/VeJHcB\nzslMoh0CgYEA2PhdUkXsBwOtV/Y9+DdkjpOzr+oyhTYNyEvRR6iMQ7/QPFzRVMBn\neZqF7Qanh7CSoa8vgr/zlfNUbSIYAMphXEl/afbVxcqaJK5xYuttjuAgbYMOrUkQ\nldqU8yDMgxgdfAL+x28MOtSpst7JwmyGYKeBgeU6zKg0jT8vi3hRbkcCgYEA7h7d\ntVTHA9SyRAyjsx9LvOLtCtyzDPXDCdvRMZZnZoLgnJBP27VTSkJ0oK4nWdWaOINg\nYYJIBy95PvsE+mPeO6TXbDyxxqa/xN9ucEc24jUXl1IWHFccGZHupEpsPNb+Y5lO\nh1CtKQOB11rqNORpCF48pWEzPv2MrBcGCZypxKcCgYB5m1rSzhXoKItzjbRV9tYJ\ng4dmxaDjQNSgur3lp/ZV0qBn9K3vDpfwdEcz/lLPnovQy1uZsPRZyzQ6pq1FZCkF\njLw5K/vNDC0w+gTbKJETT1NdjeMgBJ+jHgv16SA3KcD8zMD4DqmQH7mtY2k565G1\ngqz3nP9DzdMGh6+iQCGD6QKBgAftkygkaHPiMwU8/n5KPnVNgOLpsjRuQk4juXVT\nMqIhHWVZEK+Z++nvCH8JDVpaWEYlaaIVelxy4jCMnv/PL2kA9gMuiiS5DI17euvW\nEye46M4q931+EPtw9mcV60CjT9j1E75Bm2JQMZR//GhCapTSvmYrNE+WlYZtRdAw\nHR7lAoGBAIEhEmt6r1vPRDsE6nUQXzMjlyKnq67oerpaNn2WB5dywXchipU2uUFs\nEaQR0tbngcSyxCy6aqVJMu2h6fKJepP23nc7BtvMUp7g5BPA0KSAmLegSbqQWDpY\nTf7sKsEBze7YKj+dzhcE0g4j4ZQUyOCbQ/za6bi2qbfWwUDPrP1h\n-----END RSA PRIVATE KEY-----",
  "privateKeyType": "rsa",
  "serialNumber": "1c:14:a7:a6:7c:e4:9a:1f:93:a9:9c:e8:28:4c:d3:f0:9e:bd:11:e6"
}


=================
===== proxy =====
=================
HAVE NOT GENERATED YET (don't seem to need)


===================
===== postfix =====
===================
mail.b98041.sa.cs.ut.ee

{
  "certificate": "-----BEGIN CERTIFICATE-----\nMIIDbTCCAlWgAwIBAgIUb89/pbq/W+uYRvEwjlk8hrLVu/YwDQYJKoZIhvcNAQEL\nBQAwJjEkMCIGA1UEAxMbc2EuY3MudXQuZWUgaW50ZXJtZWRpYXRlIENBMB4XDTIy\nMDQyNzExNTg0MVoXDTIzMDQyMzEzNTkxMVowIjEgMB4GA1UEAxMXbWFpbC5iOTgw\nNDEuc2EuY3MudXQuZWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC4\npOlP73bCaElmu8FATcgLUBI+se6eEfSlQUBUmlFctgrVB2tWMrQF9K7U82uQyqzU\nXc0CXqlKGYPbp5lta7Pa4xurF+JWuwqwSY7tqbC464EsYsT+F40x2QScOkWdzBSm\nFTnC4tLTwp/Iy/KjhrEyyM7oShiUrFG5L/afSqjV0PFBqUeiZYu8xAiTurqN6HTQ\n7qsHqaFsta7NYilRO1rbdDHHi/MVFKSAsN8opME45Ew0P3Tk8+xNajj1gu/snuIr\nXfACMM/gki8oCjJtdzRdh6NWNZ66RCg5LjzfdhWsQ7PhY6hZi4JoduN0m1FyB/2S\nbC/BzTJiPrskSrMsPFn5AgMBAAGjgZYwgZMwDgYDVR0PAQH/BAQDAgOoMB0GA1Ud\nJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQUWFClOmSAjfPH0WcD\nIBX0iyp1lNswHwYDVR0jBBgwFoAUimoUDbxiHNp834QxV2kBI5Jt8ogwIgYDVR0R\nBBswGYIXbWFpbC5iOTgwNDEuc2EuY3MudXQuZWUwDQYJKoZIhvcNAQELBQADggEB\nAFGTRPeGcymNTakE9lZynVZScRnD52QPv6XJAMvzY5b2nYjeRdUkVAiJpjl3SFpc\ntLjJTpWDWICu1TGYHK2F7FoRIRg23xk8+TvA9Ewcp4eEe2KFD+eVzYMuPrTZoSIB\nR0e4EuUJ5kMxgt1ecNUjRncRPKgzxnkMeRuyqRXuaLBS3YS9cI2eE0uGQdfQCsax\nbMMBDQ5AVl8btLDMbyjCsulMfGuWuZDK378Lb34t+scJzaDIyObz4KeTUZfqPjAb\niI267WSlanxi7B+1Ze77QEclVchcsoTZ7E1JkuDzBQn15GBFMRE2S5LwLioHei7v\nqpRIf800p0skaHbveVFRo4k=\n-----END CERTIFICATE-----",
  "issuingCa": "-----BEGIN CERTIFICATE-----\nMIIDnzCCAoegAwIBAgIUWopfy2liMFyg1oyS5gDYAN/KMJcwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI4MDgxMzA5WhcNMjcw\nMzI3MDgxMzM5WjAmMSQwIgYDVQQDExtzYS5jcy51dC5lZSBpbnRlcm1lZGlhdGUg\nQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDov6qotBTWWAYVASYs\nC/Izc5thmDyLV0p0uBO9hSoN2Ug5YaYdRtHdIS5EiIAgQqj/eqZGOzVcETGO1VrQ\nT1LOsDjRL//15YCr97Hffdnd0WvDomE4hRWIZ9N86XPI3qocuC5Z6EQtFMcAYHAU\ntN02wAIdUDkVwgzHQba8APc/NhJHiAGAbKF81ufpa4MCEFUh7o9Sz1hNWRCsPXV5\n9l+saJcBtHmsnGv2xhD+IgMp5jQgDE3wY/Lh6+zb8ML3gaoshZfa+kh1KdXjCde9\n5LtaCXhHJwl1562fstZcrD7UAPpgEL9sq+Be2It9oSnJgA5/Y/5Rrm8HnhhJzJew\ny/nNAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFIpqFA28YhzafN+EMVdpASOSbfKIMB8GA1UdIwQYMBaAFJncABlE\n4LT55rHyBaBqOhK1SKhwMDsGCCsGAQUFBwEBBC8wLTArBggrBgEFBQcwAoYfaHR0\ncDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jYTAxBgNVHR8EKjAoMCagJKAihiBo\ndHRwOi8vMTI3LjAuMC4xOjgyMDAvdjEvcGtpL2NybDANBgkqhkiG9w0BAQsFAAOC\nAQEAAfn5WFpX/OL/LiAbBXT90j59nyr0H1l1blfuBaJj6LQVQeaabBchqNM6po9G\n+zdQGJQUlSxDkdZk69XW+jCJE8N1KuSvSPMxlb/K/c2STwjAvizya3n/pFwmRymP\n1FbR8NKVlw57jeyfmEMicA7Alp57Njd0NSUMZPJYqRf8ekGRC/8rAhzBinB+W9b4\n1J4EV9TvAReK5x7PncPUdUQgaifowuVx4vVrCa4kSNHZLL0RZnIFp4hp1cCO3GMc\n95Ujn9/tndf3s2mfYuaMLBHnBrPjhsBMzSTWEUBvLnrv5j9DnaEOareOPoCdOh2C\nVE1WKfgjCRQ1MPvkMaNbft5dgg==\n-----END CERTIFICATE-----",
  "caChain": "-----BEGIN CERTIFICATE-----\nMIIDnzCCAoegAwIBAgIUWopfy2liMFyg1oyS5gDYAN/KMJcwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI4MDgxMzA5WhcNMjcw\nMzI3MDgxMzM5WjAmMSQwIgYDVQQDExtzYS5jcy51dC5lZSBpbnRlcm1lZGlhdGUg\nQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDov6qotBTWWAYVASYs\nC/Izc5thmDyLV0p0uBO9hSoN2Ug5YaYdRtHdIS5EiIAgQqj/eqZGOzVcETGO1VrQ\nT1LOsDjRL//15YCr97Hffdnd0WvDomE4hRWIZ9N86XPI3qocuC5Z6EQtFMcAYHAU\ntN02wAIdUDkVwgzHQba8APc/NhJHiAGAbKF81ufpa4MCEFUh7o9Sz1hNWRCsPXV5\n9l+saJcBtHmsnGv2xhD+IgMp5jQgDE3wY/Lh6+zb8ML3gaoshZfa+kh1KdXjCde9\n5LtaCXhHJwl1562fstZcrD7UAPpgEL9sq+Be2It9oSnJgA5/Y/5Rrm8HnhhJzJew\ny/nNAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFIpqFA28YhzafN+EMVdpASOSbfKIMB8GA1UdIwQYMBaAFJncABlE\n4LT55rHyBaBqOhK1SKhwMDsGCCsGAQUFBwEBBC8wLTArBggrBgEFBQcwAoYfaHR0\ncDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jYTAxBgNVHR8EKjAoMCagJKAihiBo\ndHRwOi8vMTI3LjAuMC4xOjgyMDAvdjEvcGtpL2NybDANBgkqhkiG9w0BAQsFAAOC\nAQEAAfn5WFpX/OL/LiAbBXT90j59nyr0H1l1blfuBaJj6LQVQeaabBchqNM6po9G\n+zdQGJQUlSxDkdZk69XW+jCJE8N1KuSvSPMxlb/K/c2STwjAvizya3n/pFwmRymP\n1FbR8NKVlw57jeyfmEMicA7Alp57Njd0NSUMZPJYqRf8ekGRC/8rAhzBinB+W9b4\n1J4EV9TvAReK5x7PncPUdUQgaifowuVx4vVrCa4kSNHZLL0RZnIFp4hp1cCO3GMc\n95Ujn9/tndf3s2mfYuaMLBHnBrPjhsBMzSTWEUBvLnrv5j9DnaEOareOPoCdOh2C\nVE1WKfgjCRQ1MPvkMaNbft5dgg==\n-----END CERTIFICATE-----,-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIUaTO+DhCikHRfHnpmNQ5zJgdhgwowDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAxMLc2EuY3MudXQuZWUwHhcNMjIwMzI0MTY0NTM3WhcNMzIw\nMzIxMTY0NjA2WjAWMRQwEgYDVQQDEwtzYS5jcy51dC5lZTCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBANKp0/vJJIVPYC3UvqQd5yx8HUJT0G+v49hesbNz\nyGSmNAwR8rloJ9nXv6XB+MsDm9nb1nISYvEsQSayOGnF1Sa3+ck/oriYsNlQ9Ro5\nFryRM12LOfDtepjEdC4GsMRgr559tW6ABNe+nzRvEaXoKY3HAtVHhd0ssfcNrIUP\nxouBeMs8CmULfsebuvRupyAtVDoNTzl7p/HDD1lwgGkpQgkvmK9mYaUPUOcuAIp/\noqXXcmHYwM2P8dNxrmdyJOKyQpwHnUak+vlbOmiSU23RPLuC6mfTcRlUFnqvjMGX\ndx7J5Eycp9kd3asXwVNeKstNsifSnmPim9aUY3nYHmcwktECAwEAAaN7MHkwDgYD\nVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJncABlE4LT5\n5rHyBaBqOhK1SKhwMB8GA1UdIwQYMBaAFJncABlE4LT55rHyBaBqOhK1SKhwMBYG\nA1UdEQQPMA2CC3NhLmNzLnV0LmVlMA0GCSqGSIb3DQEBCwUAA4IBAQBrvicrsi7V\niakfvC+JYP97roA8QQvY4PzDsYzUvL1hhnKNdzPnZcVVDRQjJ6VUQJxori2BxxaD\nPxtuuuIJ1fSzbq1W5yxlF8JsFzdsuxLlTbsS8E7r59TuCRzE5sUpa+lBtOz1mWcl\nq0QGUVYDHQQV1Gn9PWMkRO8F/A2KuTa6PKO3cjpxRx0scQr6iLjNWvqoEzLEh6+t\n/1eVNeqH1aMdU7L5k80wqVoeFKq4kVCnXYvGu3R0es+9JTsQB8fI66DQCgKUx3zv\nuLrZ/6L52/vq/tzDZaqhQz3l2EardVoY9FdMBD/9wVfeYm5dF98WLAwIFElpoj+K\n4Ufwp3+lZQWe\n-----END CERTIFICATE-----",
  "privateKey": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAuKTpT+92wmhJZrvBQE3IC1ASPrHunhH0pUFAVJpRXLYK1Qdr\nVjK0BfSu1PNrkMqs1F3NAl6pShmD26eZbWuz2uMbqxfiVrsKsEmO7amwuOuBLGLE\n/heNMdkEnDpFncwUphU5wuLS08KfyMvyo4axMsjO6EoYlKxRuS/2n0qo1dDxQalH\nomWLvMQIk7q6jeh00O6rB6mhbLWuzWIpUTta23Qxx4vzFRSkgLDfKKTBOORMND90\n5PPsTWo49YLv7J7iK13wAjDP4JIvKAoybXc0XYejVjWeukQoOS4833YVrEOz4WOo\nWYuCaHbjdJtRcgf9kmwvwc0yYj67JEqzLDxZ+QIDAQABAoIBAEwM2G/tEHwYGgtv\nT7RdlQRb0XfzL3X5rUsXahiuis5lyGZfrO0O6yj807mwHODBKZg6nkLYnF+BzNZ+\n3Gm+D5EbM30v1DCmz0s2sODgoII5tbWDZOHG74fVe9mhAqVwthyF54mGhRFlOwyo\nO+LwijGBlf8E7cTmiK5+u9R2Gr4dogM7rkNRFq0nWP49c1KwcePTJ0QjDgdq0XhO\n9PHtLk5vndke0pn1yJsjP/hEOXxGUKe3QEmhneA5ijUKWPA7LxVNhrUpCRj6xEtG\nWtDdK4jX61nCa+KVL/vgRyT1LOwhujfo19UuWrQPxNC8P6bhC2p4ZkkiaSuqAvCW\nZM0I9LUCgYEA8RB2ZXhGxl03+3x3tc1r7LdQbAlitMp1duqEVVQhozyZrvC9yv8F\nqBcshV8c24gGJG0b2EfCwlrkydF1nB7Txk2M8J+Xr/PZ2zVSrcAkfL4xBtZR/B1Z\ntAv8H11zKn3bTVNQN0DhdNyH8ou5lBcZ+uJMYjwC25EP38TdBSOvJEcCgYEAxBWQ\nwqFleUzdDVT1yRZModsb7SdSDCT6m3T2auOFZU21rqhKKWgQAT/uaJsRMtaHySpy\nQxY1QZBZWUPuiu20qEph/OwbtOX1kpbSIRzRAtlRnvV+AjhzpxEXpTiG3EKXzErr\naZqS0X/1zJJqhdqdacYGPvR4iYlZlfkcznu+778CgYAPcfWUBMPMG9blZxEoddPv\nY8NkWKmZWcty5g26hdxt4Akcu1H9up87KNjyZqirrChwlwkMr3RcDYTRJXl6mkMJ\nVpisJh2K6X3Q3LbCaSgtUeZEQOEZ3SuNLKNnww4I7+1oI+lk0ORhH2wabzdhtKU2\nfN9V//BS7xVsSem7VZD4KwKBgF37yCrBmRWO1dTyB+yeF5TspHIDCrxvbP7eDM4m\nx2VK3e4dE47NJf6zWd4hlRi84tB029dz6YrHWUwD124XiSOwo07LDGykXBQq3gSo\n/zVSXGDIYeFGlYhaFO9ILLud34w3zKYNRJnNr06iTxRhOFneZFgAbVXe02WixT/i\n6B2ZAoGBANUMQSNPmh5ARjIsadKGZ29uvEnYMPwsanACvJMplJH3eLiZp5YH2ynb\nz/Jx9PJTc1Tw/yQfYHGClGkuDFHHko/YMHRHBnwIyBk84d7tY+VNEuWz7hYHbKS3\npMcH7zH4iBl3ekFba1HxDr+CXp2bAm9dQuTSSoYaAe/d1FKkeSzA\n-----END RSA PRIVATE KEY-----",
  "privateKeyType": "rsa",
  "serialNumber": "6f:cf:7f:a5:ba:bf:5b:eb:98:46:f1:30:8e:59:3c:86:b2:d5:bb:f6"
}












watch video on key exchange on YT





===========================================================================
===========================================================================
================================== LAB 6 ==================================
===========================================================================
===========================================================================



`sudo su`
`nano /etc/named/b98041.sa.cs.ut.ee` added MX and A records to zone file
`sudo named-checkzone b98041 /etc/named/b98041.sa.cs.ut.ee`
`sudo systemctl restart named`
`dig -t A mail.b98041.sa.cs.ut.ee`
`dig -t MX b98041.sa.cs.ut.ee`
`dnf install postfix`
`nano /etc/postfix/main.cf` and changed nano inet_protocols = ipv4
`systemctl restart postfix`
`vi /etc/postfix/main.cf` $myhostname = b98041.sa.cs.ut.ee; $mydomain = $myhostname
(opened ports 25 and 143 in ETAIS)
`systemctl restart postfix`
`useradd mailuser` 
`sudo passwd mailuser` vaginaface
`dnf install alpine`

===== DID NOT WORK =====
`echo -e "Subject: terminal email-01 \n\nHello! \nthis is an e-mail sent with the sendmail command from terminal\nby $USER" from $HOSTNAME | sendmail mailuser@b98041.sa.cs.ut.ee`

===== DID NOT WORK =====
`echo -e "Subject: terminal email-01 \n\nHello! \nthis is an e-mail sent with the sendmail command from terminal\nby $USER" from $HOSTNAME | sendmail nagios@scoring.sa.cs.ut.ee`

`dnf install dovecot`
`vi /etc/dovecot/conf.d/10-logging.conf` uncommented 'mail_debug' and set equal to 'yes'
`vi /etc/dovecot/dovecot.conf` added: `protocols = imap`
`vi /etc/dovecot/conf.d/10-auth.conf` added: `auth_username_format = %n`
`vi /etc/dovecot/conf.d/10-mail.conf` added: mail_location = maildir:~/mail
`ls -ld /var/mail`
`vi /etc/dovecot/conf.d/10-mail.conf` added: mail_privileged_group = mail
`vi /etc/dovecot/conf.d/15-mailboxes.conf`
`sudo usermod -G mail dovecot` in general: `sudo usermod -G groupname username`
`id dovecot` uid=97(dovecot) gid=97(dovecot) groups=97(dovecot),12(mail)
`vi /etc/dovecot/conf.d/15-mailboxes.conf` added 'auto = create' to all mailboxes and created Spam mailbox
`cat /etc/dovecot/conf.d/10-master.conf` 143, 993, 110, 995, 587
`sudo firewall-cmd --add-service=dovecot --permanent` Error: INVALID_SERVICE: 'dovecot' not among existing services
`sudo firewall-cmd --add-port=143/udp --permanent`
`sudo firewall-cmd --add-port=143/tcp --permanent`
`sudo firewall-cmd --add-port=993/udp --permanent`
`sudo firewall-cmd --add-port=993/tcp --permanent`
`sudo firewall-cmd --add-port=110/udp --permanent`
`sudo firewall-cmd --add-port=110/tcp --permanent`
`sudo firewall-cmd --add-port=995/udp --permanent`
`sudo firewall-cmd --add-port=995/tcp --permanent`
`sudo firewall-cmd --add-port=587/udp --permanent`
`sudo firewall-cmd --add-port=587/tcp --permanent`
`sudo firewall-cmd --reload`

`dnf install telnet`

`telnet 127.0.0.1 143` ==> A1 login mailuser vaginaface; A1 logout
`telnet mail.b98041.sa.cs.ut.ee 143`

`telnet mail.b98041.sa.cs.ut.ee 143` a1 login mailuser vaginaface

`sudo firewall-cmd --add-port=25/udp --permanent`
`sudo firewall-cmd --add-port=25/tcp --permanent`
`sudo firewall-cmd --reload`
`vi /etc/dovecot/conf.d/10-auth.conf` added: disable_plaintext_auth = no 
`vi /etc/dovecot/conf.d/10-ssl.conf` added: ssl = no
`vi /etc/dovecot/dovecot.conf` added `protocols = imap lmtp`
`vi /etc/dovecot/conf.d/10-master.conf` added:
service lmtp {
  unix_listener /var/spool/postfix/private/dovecot-lmtp { # unix_listener $PATH_TO_SOCKET
    mode = 0600                                           # Socket permissions
    user = postfix                                        # Socket owner
    group = postfix                                       # Socket group
  }
}
`sudo vi /etc/postfix/main.cf`
`sudo systemctl restart postfix`
`sudo vi /etc/postfix/master.cf` added:
	submission inet n      -      n       -       -      smtpd
           -o syslog_name=postfix/submission
           -o smtpd_sasl_auth_enable=yes
           -o smtpd_recipient_restrictions=permit_mynetworks,permit_sasl_authenticated,reject
           -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
           -o smtpd_sasl_type=dovecot
           -o smtpd_sasl_path=private/auth

	# Explanations
	#   -o syslog_name=postfix/submission: The name with which submission events are logged
        #   -o smtpd_sasl_auth_enable=yes:     Enable sasl authentication (`plain` in our case)
        #   -o smtpd_recipient_restrictions=permit_mynetworks,permit_sasl_authenticated,reject: Permit recipients outside of $mynetworks only to authenticated users
        #   -o smtpd_relay_restrictions=permit_sasl_authenticated,reject: Allow mail relaying only for authenticated users
        #   -o smtpd_sasl_type=dovecot:      Set dovecot as the SASL provider
        #   -o smtpd_sasl_path=private/auth: Set authentication socket location

`sudo vi /etc/dovecot/conf.d/10-master.conf` added
service auth {
    unix_listener /var/spool/postfix/private/auth {
      mode = 0600
      user = postfix
      group = postfix
    }
}

`sudo systemctl restart postfix`       
`sudo systemctl restart dovecot`
`tail /var/log/maillog` seems to be an issue with 'postfix/smtpd' and/or 'dovecot-lmtp'
	Initially, I wrote the two large code chunks above that relate to smtpd and lmtp, but after seeing these 		errors, I copied the text from the course wiki and pasted, however, errors still persisted
	I sent mail from mailuser to centos and root but neither received the emails
	I checked /var/log/maillog but not sure how to interpret the output

`printf '\0%s\0%s' 'mailuser' '$mailuser_password' | openssl base64` AG1haWx1c2VyACRtYWlsdXNlcl9wYXNzd29yZA==
`telnet 127.0.0.1 587` "connection closed by foreign host"
`220 mail.b98041.sa.cs.ut.ee ESMTP Postfix` UNSUCCESSFUL "connection closed by foreign host"
`220 mail.server.sa.cs.ut.ee ESMTP Postfix` UNSUCCESSFUL "connection closed by foreign host"

`ehlo server` DOES NOT WORK in telnet

`telnet 127.0.0.1 143`
	Trying 127.0.0.1...
	telnet: connect to address 127.0.0.1: Connection refused

`sudo dnf install epel-release`
`sudo dnf install dnf-plugins-core`
`sudo dnf update`
`sudo dnf config-manager --set-enabled powertools`
`sudo dnf install make`
`sudo dnf install ImageMagick`
`sudo dnf install ImageMagick-devel`
`sudo dnf install ImageMagick-perl`
`sudo dnf install pcre-devel`
`sudo dnf install zlib`
`sudo dnf install zlib-devel`
`sudo dnf install libzip`
`sudo dnf install libzip-devel`
`sudo dnf install libmcrypt-devel`
`sudo dnf install php`
`sudo dnf install php-fpm`
`sudo dnf install php-devel`
`sudo dnf install php-pear`
`sudo dnf install php-cli`
`sudo dnf install php-gd`
`sudo dnf install php-curl`
`sudo dnf install php-xml`
`sudo dnf install php-mysqlnd`
`sudo dnf install php-mbstring`
`sudo dnf install php-intl`
`sudo dnf install php-ldap`
`sudo dnf install mariadb`
`sudo dnf install mariadb-server`
`sudo dnf install httpd`
`sudo pecl install imagick`
`sudo touch /etc/php.d/20-imagick.ini`
`sudo echo >> extension=imagick.so /etc/php.d/20-imagick.ini` DID NOT WORK
`sudo vi /etc/php.d/20-imagick.ini` extension=imagick.so
`sudo pecl install mcrypt`
`sudo touch /etc/php.d/20-mcrypt.ini`
`sudo vi /etc/php.d/20-mcrypt.ini` extension=mcrypt.so
`sudo pecl install zip`
`sudo touch /etc/php.d/20-zip.ini`
`sudo vi /etc/php.d/20-zip.ini` extension=zip.so
`sudo systemctl start httpd`
`sudo systemctl start mariadb`
`sudo systemctl start php-fpm`

LAST GREEN BLOCK

`openssl rand -base64 16` rnY/3bctU3WcOMx9Y7CVnA==
`mysql -u root -p` Enter password:
ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES) solution: mariadbpassword

`sudo firewall-cmd --list-all`
`sudo firewall-cmd --reload`

`sudo service dovecot status`
`sudo service postfix status`

`printf '\0%s\0%s' 'mailuser' 'vaginaface' | openssl base64` AG1haWx1c2VyAHZhZ2luYWZhY2U=

`auth plain AG1haWx1c2VyAHZhZ2luYWZhY2U=`

`telnet 127.0.0.1 143`
`a1 login mailuser vaginaface`
`b select inbox`
`2 FETCH 1:* (FLAGS INTERNALDATE BODY.PEEK[HEADER.FIELDS (SUBJECT)])`

`CREATE DATABASE roundcubemail /*!40101 CHARACTER SET utf8 COLLATE utf8_general_ci */;`
`CREATE USER 'roundcube'@'localhost' IDENTIFIED BY 'AG1haWx1c2VyAHZhZ2luYWZhY2U=';`
`GRANT ALL PRIVILEGES ON roundcubemail.* TO 'roundcube'@'localhost';`
`FLUSH PRIVILEGES;`
`exit;`

`wget https://github.com/roundcube/roundcubemail/releases/download/1.4.11/roundcubemail-1.4.11-complete.tar.gz -O /var/www/html/roundcube.tar.gz`

`tar xvzf roundcube.tar.gz`
`rm roundcube.tar.gz`
`mv roundcubemail-1.4.11 roundcubemail`
`chown -R apache:apache /var/www/html/roundcubemail` <== change permissions so apache can access the directory
`chcon -t httpd_sys_rw_content_t /var/www/html/roundcubemail -R`
`sudo vi /etc/httpd/conf.d/mail.b98041.sa.cs.ut.ee.conf`
	<VirtualHost *:80>
	  ServerAdmin root@b98041.sa.cs.ut.ee
	  ServerName mail.b98041.sa.cs.ut.ee
	  DocumentRoot /var/www/html/roundcubemail
	  <Directory /var/www/html/roundcubemail>
	      Allowoverride all
	  </Directory>
	  ErrorLog /var/log/httpd/mail.b98041.sa.cs.ut.ee-error.log
	  CustomLog /var/log/httpd/mail.b98041.sa.cs.ut.ee-access.log combined
	  ForensicLog /var/log/httpd/mail.b98041.sa.cs.ut.ee-forensic.log
	</VirtualHost>
(went to mail.b98041.sa.cs.ut.ee/installer and configured Roundcube)
results from http://mail.b98041.sa.cs.ut.ee/installer/index.php?_step=3 :
drwxr-xr-x. /var/www/html/roundcubemail/temp/ 
drwxr-xr-x. /var/log/roundcube

Hasketits: c07858
















confused by the instructions in: "Setup the dovecot mail directory (~/mail) and mailbox (/var/mail)."
ran `man dovecot` and searched for 'secondary' but nothing returned








@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@


socket file connection between two services
`ls -l /var/spool/postfix/auth`


MX record:
- defines which server on which IP address is responsible for accepting email
- required to send email between servers
- priority parameter:
  - 0 is highest
  - lowest value receives the most email
  - b98041.sa.cs.ut.ee. IN MX 0 mail.b98041.sa.cs.ut.ee.


want emails to b98041.sa.cs.ut.ee to be directed to mail.b98041.sa.cs.ut.ee
mail.b98041.sa.cs.ut.ee ===> VM's IP
must create an A record pointing to the mail server


`dig` command:
gathers and displays DNS information
Domain Information Groper
for troubleshooting DNS problems 


Email protocols:
- SMTP
  - mail transfer: sending and receiving
  - text-based
    - UTF-8
    - files, images and encrypted messages converted to binary, then converted to textual representation, 	then added to the email
- IMAP
  - internet message access
  - how to access messages in a remote mailbox
  - allows email client to access mail inside the server
  - synchronizes email between client and server by polling and checking the inbox in the server
  - also text-based because SMTP is text-based


MTA:
- mail transfer agent
- message transfer agent
- transfers email messages from one computer to another via SMTP


Postfix = MTA
Postfix config file: /etc/postfix/main.cf
log file:            /var/log/maillog



Dovecot IMAP server's logging module: /etc/dovecot/conf.d/10-logging.conf

Dovecot's main config file: /etc/dovecot/dovecot.conf


vi commands I learned:
`/` search; `n` for next result
`:wq` save and exit file
`:q!` close file without saving
`yy` copy a line
`p` paste that line after cursor
`esc` (command mode) `:set number` to show line numbers


`wc -l <filename>` counts the number of lines



`lsof -i:143` i = interface; will look at all interfaces in machine when a port number is supplied

2 firewalls:
- 1. ETAIS
- 2. Linux


if ports won't open or do what I want, try:
1. ETAIS
  - security group?
  - security group added to machine?
2. firewall
  - `firewall-cmd <port #>`
  - `sudo firewall-cmd --list-all`
3. check if service is running
  - dovecot
  - postfix
4. is service configured correctly?
  - `sudo service <service name> status`
    - the command above will generate output and if lucky, it'll say on what line there's an error with 		some configuration file or another; but sometimes it'll refer to include statements that contain 	references to other files; may need to check these other files
5. `nmap <IP>`






 -e     Edit  the  main.cf  configuration  file,  and  update  parameter  settings  with  the
              "name=value" pairs on the postconf(1) command line.

              With -M, edit the master.cf configuration file,  and  replace  one  or  more  service
              entries  with  new  values  as specified with "service/type=value" on the postconf(1)
              command line.

              With -F, edit the master.cf configuration file,  and  replace  one  or  more  service
              fields  with  new  values  as  specified with "service/type/field=value" on the post‐
              conf(1) command line. Currently, the "command" field contains the  command  name  and
              command  arguments.   this may change in the near future, so that the "command" field
              contains only the command name, and a new "arguments" pseudofield contains  the  com‐
              mand arguments.

              With -P, edit the master.cf configuration file, and add or update one or more service
              parameter settings (-o parameter=value settings) with new values  as  specified  with
              "service/type/parameter=value" on the postconf(1) command line.

              In all cases the file is copied to a temporary file then renamed into place.  Specify
              quotes to protect special characters and whitespace on the postconf(1) command line.

              The -e option is no longer needed with Postfix version 2.8 and later.







==================================
========= In class notes =========
==================================

Email is insecure

can be compromised if someone gets access to the server, email client or the connection between the two


IMAP synchronizes the client with web server


recommendation:
open all the ports at once so don't have to deal with it later


port 587: sometimes SMTP handles authentication; sometimes IMAP
we'll use IMAP


===========================================================================
===========================================================================
================================== LAB 5 ==================================
===========================================================================
===========================================================================



ssh -i "C:\Users\Wilt Chamberlain\.ssh\.ssh (old)\devops.pem" centos@172.17.90.238

`host ns1.b98041.sa.cs.ut.ee 172.17.90.238`
`host b98041.sa.cs.ut.ee 172.17.90.238`
`nslookup b98041.sa.cs.ut.ee 172.17.90.238`

`sudo nano /etc/named/b98041.sa.cs.ut.ee`
(Ansible step 1)
`journalctl -r -u named`
`dig www.b98041.sa.cs.ut.ee`
`sudo dnf install httpd`
`sudo firewall-cmd --add-service=http --permanent`
`sudo firewall-cmd --reload`
`sudo systemctl start httpd`
`sudo mkdir -p /var/www/html/www.b98041/public_html/`
`sudo nano /etc/httpd/conf.d/www.b98041.conf`
`sudo systemctl restart named`
`sudo nano /etc/httpd/conf.d/welcome.conf` comment out all lines
`sudo systemctl restart httpd`
`sudo apachectl restart`
`sudo nano /var/www/html/www.b98041/public_html/index.html`
`dnf install python3-pip`
`pip3 install flask`
`setsebool -P httpd_can_network_connect=1`
`useradd proxy`
`nano /etc/systemd/system/proxy.service`
`sudo systemctl daemon-reload`
`sudo systemctl start proxy`
`sudo systemctl enable proxy`
`sudo dnf install php-mysqlnd php-fpm mariadb-server httpd tar curl php-json`
`systemctl start mariadb`
`systemctl enable mariadb`
`systemctl start httpd`
`systemctl enable httpd`
`sudo mysql_secure_installation`
mariadbpassword
`CREATE DATABASE WordPress;`
`CREATE USER `admin`@`localhost` IDENTIFIED BY 'pass';`
`GRANT ALL ON WordPress.* TO `admin`@`localhost`;`
`FLUSH PRIVILEGES;`
`exit`
`curl https://wordpress.org/latest.tar.gz --output wordpress.tar.gz`
`tar xf wordpress.tar.gz`
`cp -r wordpress /var/www/html`
`chown -R apache:apache /var/www/html/wordpress`
`chcon -t httpd_sys_rw_content_t /var/www/html/wordpress -R`
`nano /etc/php-fpm.conf` error_log = /var/log/httpd/php-errors.log
`nano /etc/php-fpm.d/www.conf` php_admin_value[error_log] = /var/log/httpd/www-php-errors.log
`touch /var/log/httpd/php-errors.log`
`touch /var/log/httpd/www-php-errors.log`
`sudo systemctl reload httpd`
`sudo systemctl start php-fpm`
`sudo nano wordpress.b98041.conf`

`sudo nano /etc/httpd/conf.d/proxy.conf` add: ForensicLog /var/log/httpd/proxy-forensic.log
`sudo nano /etc/httpd/conf.d/wordpress.b98041.conf` add: ForensicLog /var/log/httpd/wordpress.b98041-forensic.log
`sudo nano /etc/httpd/conf.d/www.b98041.conf` add: ForensicLog /var/log/httpd/www.b98041-forensic.log
`sudo dnf install mod_security`
`sudo nano /etc/httpd/modsecurity.d/local_rules/modsecurity_localrules.conf` see lab 5 manual for what was added
`dnf install netcat`
`printf "GET / HTTP/1.1\r\nUser-Agent: nc/0.0.1\r\nHost: www.b98041.sa.cs.ut.ee\r\nAccept: */*\r\n\r\n" | nc localhost 80`





3 virtual hosts:

1. www = apache
2. proxy flask
3. wordpress

/etc/httpd/conf.d = virtual host configuration directory

/etc/httpd/ = apache config directory AKA webserver config directory

virtual host /etc/httpd

DB name: WordPress
DB username: admin
DB password: pass
DB host: localhost



random:
sysctl config runs on boot by default




#!/bin/env python3

from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello, Bill, you SysAdmin genius you"

if __name__ == "__main__":
    app.run(port=5000)



#########################
##### Ansible steps #####
#########################

1. create CNAME record for `www` inside `/etc/named/b98041.sa.cs.ut.ee` zone file
www            IN     CNAME   b98041.sa.cs.ut.ee.
update serial to 2022032801

2. install Apache Web Server
`sudo dnf install httpd`

3. there's a firewalld module




@@@@@@@@@@@@@@@@@
@@@@@ Notes @@@@@
@@@@@@@@@@@@@@@@@


UPDATE SERIAL EVERY TIME THERE'S A CHANGE IN ZONE FILE?
(zone file = /etc/named/b98041.sa.cs.ut.ee)
YES!!!!


restart DNS




alias domain name =====CNAME=====> real domain name =====A record=====> IP address


Dot in a zone file:
zytrax.com/books/dns/apa/dot.html
. at end = qualified (FQDN)
no dot = unqualified


`sudo apachectl graceful` restarts the Apache server without interrupting its work
is equivalent too
`sudo systemctl restart httpd`





instruction: "set up a domain proxy.b98041.cs.ut.ee that points to your machine" means create a CNAME record in /etc/named/b98041.sa.cs.ut.ee
named = DNS server
httpd = Apache web server that actually serves content

CNAME records are basically prefixes on the root domain



map of DNS process:
local machine ==> web server ==> DNS server 
firewall is like a hole puncher allowing traffic flowing in and out, or a highway into and out of a city







=================
===== Lab 4 =====
=================


sudo nano /etc/ssh/sshd_config (change PasswordAuthentication to no [was already no])
sudo systemctl restart sshd.config





`sudo yum autoremove -y`
`sudo yum clean all`
`sudo firewall-cmd --add-service=dns --permanent`
`sudo firewall-cmd --add-port=8301/udp --permanent`
`sudo firewall-cmd --add-port=8301/tcp --permanent`
`sudo firewall-cmd --reload`
`sysctl net.ipv6.conf.default.disable_ipv6`
`sysctl net.ipv6.conf.all.disable_ipv6`
`sudo nano /etc/sysctl.d/70-ipv6.conf`
	net.ipv6.conf.default.disable_ipv6=1
	net.ipv6.conf.all.disable_ipv6=1
`sudo sysctl --load /etc/sysctl.d/70-ipv6.conf`
`ip addr l`
`hostname`
b98041.novalocal
b98041.sa.cs.ut.ee
`nano etc/hostname`
`127.0.1.1 b98041.sa.cs.ut.ee b98041`
`sudo reboot`
`hostname --long`
`ping b98041.sa.cs.ut.ee`
`sudo yum install bind`
`sudo yum install bind-utils`
`sudo mkdir /var/named/log`
`sudo chown named /var/named/log`
`sudo chgrp named /var/named/log`
`sudo touch /var/named/log/default`
`sudo chown named /var/named/log/default`
`sudo chgrp named /var/named/log/default`
`sudo touch /var/named/log/auth_servers`
`sudo chown named /var/named/log/auth_servers`
`sudo chgrp named /var/named/log/auth_servers`
`sudo touch /var/named/log/zone_transfers`
`sudo chown named /var/named/log/zone_transfers`
`sudo chgrp named /var/named/log/zone_transfers`
`sudo touch /var/named/log/client_security`
`sudo chown named /var/named/log/client_security`
`sudo chgrp named /var/named/log/client_security`
`sudo touch /var/named/log/queries`
`sudo chown named /var/named/log/queries`
`sudo chgrp named /var/named/log/queries`
`sudo touch /var/named/log/query-errors`
`sudo chown named /var/named/log/query-errors`
`sudo chgrp named /var/named/log/query-errors`
`sudo yum remove bind`
`sudo yum remove bind-utils`
(modified named.conf according to manual)
`sudo named-checkconf`
`sudo systemctl start named`
`sudo service named status`
`sudo named-checkconf`
`sudo systemctl start named`
`sudo service named status`
`sudo systemctl status named`
`sudo journalctl -xn`
`sudo systemctl enable named`
`sudo nano /etc/resolv.conf`
`dig @127.0.0.1 courses.cs.ut.ee`
`dig @127.0.0.1 www.google.com`
`sudo reboot`
`sudo cat /etc/resolv.conf`
`ping www.google.com`
`sudo cat /etc/hostname`
`sudo systemctl status named.service -l`
`touch /etc/named/b98041.sa.cs.ut.ee`
`sudo nano /etc/named/b98041.sa.cs.ut.ee`
(created zone file according to manual)
`sudo named-checkzone b98041 /etc/named/b98041.sa.cs.ut.ee`
`sudo nano /etc/named.conf`
`sudo named-checkconf`
`sudo systemctl restart named`
`dig @127.0.0.1 b98041.sa.cs.ut.ee`
`dig @127.0.0.1 ns1.b98041.sa.cs.ut.ee`
`dig @127.0.0.1 b98041.sa.cs.ut.ee NS`
(added `notify explicit;` to my personal zone statement in named.conf)
(added `also-notify { 172.17.66.134; };` to named.conf in the options section)
(incremented serial in /etc/named/b98041.sa.cs.ut.ee)
`sudo systemctl restart named`
`sudo named-checkzone b98041 /etc/named/b98041.sa.cs.ut.ee`
`sudo named-checkzone "90.17.172.in-addr.arpa" /etc/named/reverse.b98041.sa.cs.ut.ee`
`sudo cat /etc/named/reverse.b98041.sa.cs.ut.ee
`sudo nano /etc/named/reverse.b98041.sa.cs.ut.ee` to fix the error of having "@ IN NS" not "@ IN PTR"
`sudo named-checkzone "90.17.172.in-addr.arpa" /etc/named/reverse.b98041.sa.cs.ut.ee` OK
`sudo named-checkconf` No response
`sudo nano /etc/named/reverse.b98041.sa.cs.ut.ee` just to verify
`sudo ls -la /etc/named` to verify permissions
`sudo nano /etc/named.conf` to add the reverse DNS zone clause to the bind9 file
`sudo named-checkconf`
`sudo chown root:named /etc/named/reverse.b98041.sa.cs.ut.ee` ***
`sudo chown root:named /etc/named/b98041.sa.cs.ut.ee` ***
`sudo systemctl restart named`
`host 172.17.90.238` Host 238.90.17.172.in-addr.arpa. not found: 3(NXDOMAIN)
`nslookup 172.17.90.238` ** server can't find 238.90.17.172.in-addr.arpa: NXDOMAIN


procedure:
roles dir
each lab is a new role
inside each role is one or more tasks
template: search templates dir and can use vars
tasks: main.yml







Reminders:
DNS server configuration file = /etc/named.conf 
zone file = /etc/named/b98041.sa.cs.ut.ee
reverse mapping zone file = /etc/named/reverse.b98041.sa.cs.ut.ee
bind9 file = /etc/named.conf

Permissions:
user/group/any other user

*** As the BIND name server runs with the rights of the root user and group named (not root), you should always ensure that the main configuration file and zone files have the correct permissions and group ownership
Every file to be read by the BIND DNS server must be readable by the named group
If you get "permission denied" errors, use the following commands to set the owner or group ownership




IP = 172.17.90.238
$ORIGIN = 90.17.172.in-addr.arpa


restart at Reverse DNS section


; BIND data file for local zone b98041.sa.cs.ut.ee;
$TTL    15M
@       IN      SOA     ns1.b98041.sa.cs.ut.ee. root.b98041.sa.cs.ut.ee (
                     2022032002   ; Serial
                            15M   ; Refresh
                             5M   ; Retry
                           120M   ; Expire
                           600 )  ; Negative Cache TTL
@              IN     NS      ns1
@              IN     A       172.17.90.238
ns1            IN     A       172.17.90.238
b98041         IN     A       172.17.90.238



$ORIGIN 90.17.172.in-addr.arpa.   ; Zone starting point in the namespace tree
                                  ; (if skipped, the origin is inferred by the DNS server
                                  ; based on zone declaration in name.conf.local file
$TTL         15M                  ; Default expiration time for all resources
@            IN          SOA      ns1.b98041.sa.cs.ut.ee. root.b98041.sa.cs.ut.ee. (
             2022032001           ; serial
             15M                  ; refresh every 15 minutes
              5M                  ; retry every 5 minutes
          604800                  ; expire 7 days = 604800 seconds
             600)                 ; negative cache TTL
@             IN         PTR       ns.b98041.sa.cs.ut.ee.      ; name server for b98041.sa.cs.ut.ee
1             IN         PTR       ns.b98041.sa.cs.ut.ee.      ; 172.17.90.1 has name ns.b98041.sa.cs.ut.ee
5             IN         PTR       myhost.b98041.sa.cs.ut.ee.  ; 172.17.90.5 has name myhost.b98041.sa.cs.ut.ee
6             IN         PTR       mail.b98041.sa.cs.ut.ee.    ; 172.17.90.6 has name mail.b98041.sa.cs.ut.ee
7             IN         PTR       myhost2.b98041.sa.cs.ut.ee. ; 172.17.90.7 has name myhost2.b98041.sa.cs.ut.ee


zone "90.17.172.in-addr.arpa" IN {
        type master;
        file "/etc/named/reverse.b98041.sa.cs.ut.ee";
        allow-update { none; };
};













[centos@b98041 var]$ sudo cat /etc/named.conf
//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//

options {
        listen-on port 53 { 127.0.0.1; };
        listen-on-v6 port 53 { ::1; };
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
        secroots-file   "/var/named/data/named.secroots";
        recursing-file  "/var/named/data/named.recursing";
        allow-query     { localhost; };

        /*
         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable
           recursion.
         - If your recursive DNS server has a public IP address, you MUST enable access
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface
          */
        recursion yes;

        dnssec-enable yes;
        dnssec-validation yes;

        managed-keys-directory "/var/named/dynamic";

        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";

        /* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
        include "/etc/crypto-policies/back-ends/bind.config";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
        type hint;
        file "named.ca";
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";













=====================
===== Questions =====
=====================

1. General question to follow up on the last thread: why are TTL values anything other than the minimum possible times? 

2. why can't I sudo cd into /var/named/log but I can touch and nano files inside that directory?




==================================
===== Shortcuts and Pro Tips =====
==================================

directions that start with # mean sudo
directions that start with $ mean regular user

`sudo !!`




=========================
===== Lecture notes =====
=========================

/etc/resolv.conf

we'll configure last two 

DNS resolver = DNS recursive resolver

13 root nameservers hardcoded in every DNS resolver in the world

.ee root server
ut.ee TLD server

DNS resolver caches data for some period of time

caching time = TTL time to live
the amount of time needed for changes to propagate to resolvers

we are responsible for our authoritative nameserver
b98041.sa.cs.ut.ee

resolver from inside university network, not outside


CNAME record is basically an alias chain: one alias points to another to another












 545  yum autoremove -y
  546  sudo yum autoremove -y
  547  sudo yum clean all
  548  clear
  549  history
  550  cd ..
  551  cd etc/ssh/
  552  ls -la
  553  nano sshd_config
  554  sudo nano ssh_config
  555  sudo nano sshd_config
  556  firewall-cmd --add-service=dns --permanent
  557  sudo firewall-cmd --add-service=dns --permanent
  558  sudo firewall-cmd --add-port=8301/udp --permanent
  559  sudo firewall-cmd --add-port=8301/tcp --permanent
  560  sudo firewall-cmd --reload
  561  sysctl -A
  562  cat /etc/sysctl.conf
  563  net.ipv6.conf.default.disable_ipv6
  564  sysctl net.ipv6.conf.default.disable_ipv6
  565  sysctl net.ipv6.conf.all.disable_ipv6
  566  sudo nano /etc/sysctl.d/70-ipv6.conf
  567  cat /etc/sysctl.d/70-ipv6.conf
  568  sysctl --load /etc/sysctl.d/70-ipv6.conf
  569  sudo sysctl --load /etc/sysctl.d/70-ipv6.conf
  570  ip addr l
  571  ip addr l | grep inet6
  572  ip addr l | grep 'inet6'
  573  ip addr l | grep 'global'
  574  ip addr l | grep global
  575  history



















//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//

options {
        listen-on port 53 { 127.0.0.1; };
        listen-on-v6 port 53 { ::1; };
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
        secroots-file   "/var/named/data/named.secroots";
        recursing-file  "/var/named/data/named.recursing";
        allow-query     { localhost; };

        /*
         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable
           recursion.
         - If your recursive DNS server has a public IP address, you MUST enable access
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface





from the lab manual:

Many email servers on the Internet are configured to reject incoming emails from any IP address that doesn't have a reverse DNS
So if you run your own email server, reverse DNS must exist for the IP address that the outgoing email is sent from
Reverse DNS mappings are also an important part of keeping the trust-based DNS working
A simple check any service provider can run is looking for mismatches in PTR and A type records, and usually, if these don't match, data is marked as spam.




general info from Ott:

-d 		-daemon
-ctl		-controller
-mgr/mgmt	-manager
xxxxxx.d	-configuration directory for whatever service has the same name

systemctl handles service-level tasks
`systemctl <cmd> <services>`
cmd values: 
start
stop
restart
enable (allows autorun)
disable (disallows autorun)


systemd has sub (something):
systemd-journald (journalctl controls this service)

systemctl status <service>


others:
logind
systemd-resolved (don't use; it's basically DNS)
systemd-networkingd
`systemctl list-unit-files`








named.conf configures the zones--which zones are available in lcoal resolves
zone file that hosts the records


master config: named.conf

ut.ee has zones: cs, math, hpc
named.hpc, named.cs, named.math

don't forget to update the serial
